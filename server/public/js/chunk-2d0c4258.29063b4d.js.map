{"version":3,"sources":["webpack:///./src/components/home/PortPanelDialog.vue?757f","webpack:///src/components/home/PortPanelDialog.vue","webpack:///./src/components/home/PortPanelDialog.vue?d73f","webpack:///./src/components/home/PortPanelDialog.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","row","justify-center","persistent","fullscreen","transition","model","value","callback","$$v","doShowPortPanel","expression","dark","color","icon","on","click","$event","openPortDis","leavePortPanelDialog","_v","flat","disabled","openPort","selectedPortObject","comName","left","closePortDis","closePort","flushPortDis","flushPort","resumePortDis","resumePort","pausePortDis","pausePort","staticClass","type","undefined","avatar","_s","manufacturer","serialNumber","pnpId","productId","vendorId","_e","wrap","xs12","px-3","card","label","solo","writeToPortTextField","sendCommandToPort","clearPortConsole","pb-3","height","_l","line","index","key","charAt","max-width","large","closePortPanelDialog","staticRenderFns","PortPanelDialogvue_type_script_lang_js_","data","writeToPortProgress","writeToPortProgressValue","portConsoleTxt","sockets","onSinglePortData","target","localStorage","id","onSinglePortDataCallback","methods","Object","objectSpread","vuex_esm","unshift","portName","_this","ports","pauseEmittingPort","then","result","$parent","showSuccessSnackbar","success","catch","error","includes","showErrorSnackbar","_this2","resumeEmittingPort","_this3","_this4","_this5","_this6","writeToPort","_this7","showPortPanel","portObject","_this8","isPortOpen","isOpen","isSelectedPortOpened","isPortActive","home_PortPanelDialogvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/chunk-2d0c4258.29063b4d.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"justify-center\":\"\"}},[_c('v-dialog',{attrs:{\"persistent\":\"\",\"fullscreen\":\"\",\"transition\":\"dialog-bottom-transition\"},model:{value:(_vm.doShowPortPanel),callback:function ($$v) {_vm.doShowPortPanel=$$v},expression:\"doShowPortPanel\"}},[_c('v-card',[_c('v-toolbar',{attrs:{\"dark\":\"\",\"color\":\"teal\"}},[_c('v-btn',{attrs:{\"icon\":\"\",\"dark\":\"\"},on:{\"click\":function($event){_vm.openPortDis == true ? _vm.leavePortPanelDialog = true : _vm.doShowPortPanel = false}}},[_c('v-icon',[_vm._v(\"close\")])],1),_c('v-toolbar-title',[_vm._v(\"Port Panel\")]),_c('v-spacer'),_c('v-toolbar-items',[_c('v-btn',{attrs:{\"dark\":\"\",\"flat\":\"\",\"disabled\":_vm.openPortDis},on:{\"click\":function($event){return _vm.openPort(_vm.selectedPortObject.comName)}}},[_c('v-icon',{attrs:{\"left\":\"\"}},[_vm._v(\"fas fa-door-open\")]),_vm._v(\"Open Port\\n          \")],1)],1),_c('v-toolbar-items',[_c('v-btn',{attrs:{\"dark\":\"\",\"flat\":\"\",\"disabled\":_vm.closePortDis},on:{\"click\":function($event){return _vm.closePort(_vm.selectedPortObject.comName)}}},[_c('v-icon',{attrs:{\"left\":\"\"}},[_vm._v(\"fas fa-times-circle\")]),_vm._v(\"Close Port\\n          \")],1)],1),_c('v-toolbar-items',[_c('v-btn',{attrs:{\"dark\":\"\",\"flat\":\"\",\"disabled\":_vm.flushPortDis},on:{\"click\":function($event){return _vm.flushPort(_vm.selectedPortObject.comName)}}},[_c('v-icon',{attrs:{\"left\":\"\"}},[_vm._v(\"fas fa-arrow-alt-circle-down\")]),_vm._v(\"Flush Data\\n          \")],1)],1),_c('v-toolbar-items',[_c('v-btn',{attrs:{\"dark\":\"\",\"flat\":\"\",\"disabled\":_vm.resumePortDis},on:{\"click\":function($event){return _vm.resumePort(_vm.selectedPortObject.comName)}}},[_c('v-icon',{attrs:{\"left\":\"\"}},[_vm._v(\"fas fa-play-circle\")]),_vm._v(\"Resume Data\\n          \")],1)],1),_c('v-toolbar-items',[_c('v-btn',{attrs:{\"dark\":\"\",\"flat\":\"\",\"disabled\":_vm.pausePortDis},on:{\"click\":function($event){return _vm.pausePort(_vm.selectedPortObject.comName)}}},[_c('v-icon',{attrs:{\"left\":\"\"}},[_vm._v(\"fas fa-pause-circle\")]),_vm._v(\"Pause Data\\n          \")],1)],1)],1),_c('v-alert',{staticClass:\"mx-3\",attrs:{\"value\":true,\"type\":\"info\",\"color\":\"teal darken-4\",\"transition\":\"fade-transition\"}},[_vm._v(\"Only \\\"Port Name\\\" is guaranteed 100%, other information is related to the connected device of the current port.\")]),(_vm.selectedPortObject != undefined)?_c('v-list',[_c('v-list-tile',{attrs:{\"avatar\":\"\"}},[_c('v-list-tile-content',[_c('v-list-tile-title',[_vm._v(\"Port Name\")]),_c('v-list-tile-sub-title',[_vm._v(_vm._s(_vm.selectedPortObject.comName))])],1)],1),_c('v-list-tile',{attrs:{\"avatar\":\"\"}},[_c('v-list-tile-content',[_c('v-list-tile-title',[_vm._v(\"Manufacturer\")]),_c('v-list-tile-sub-title',[_vm._v(_vm._s(_vm.selectedPortObject.manufacturer))])],1)],1),_c('v-list-tile',{attrs:{\"avatar\":\"\"}},[_c('v-list-tile-content',[_c('v-list-tile-title',[_vm._v(\"Serial Number\")]),_c('v-list-tile-sub-title',[_vm._v(_vm._s(_vm.selectedPortObject.serialNumber))])],1)],1),_c('v-list-tile',{attrs:{\"avatar\":\"\"}},[_c('v-list-tile-content',[_c('v-list-tile-title',[_vm._v(\"Plug and Play ID\")]),_c('v-list-tile-sub-title',[_vm._v(_vm._s(_vm.selectedPortObject.pnpId))])],1)],1),_c('v-list-tile',{attrs:{\"avatar\":\"\"}},[_c('v-list-tile-content',[_c('v-list-tile-title',[_vm._v(\"Procudt ID\")]),_c('v-list-tile-sub-title',[_vm._v(_vm._s(_vm.selectedPortObject.productId))])],1)],1),_c('v-list-tile',{attrs:{\"avatar\":\"\"}},[_c('v-list-tile-content',[_c('v-list-tile-title',[_vm._v(\"Vendor ID\")]),_c('v-list-tile-sub-title',[_vm._v(_vm._s(_vm.selectedPortObject.vendorId))])],1)],1)],1):_vm._e(),_c('v-divider'),_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\",\"px-3\":\"\"}},[_c('v-toolbar',{staticClass:\"elevation-0 mt-2 teal--text text--darken-1\",attrs:{\"color\":\"teal lighten-4\",\"card\":\"\"}},[_c('v-text-field',{staticClass:\"pt-2 teal--text text--darken-4\",attrs:{\"label\":\"Commands\",\"solo\":\"\"},model:{value:(_vm.writeToPortTextField),callback:function ($$v) {_vm.writeToPortTextField=$$v},expression:\"writeToPortTextField\"}}),_c('v-fade-transition',[(_vm.writeToPortTextField != '')?_c('v-btn',{attrs:{\"icon\":\"\"},on:{\"click\":function($event){return _vm.sendCommandToPort(_vm.selectedPortObject.comName)}}},[_c('v-icon',{attrs:{\"color\":\"teal darken-4\"}},[_vm._v(\"fas fa-paper-plane\")])],1):_vm._e()],1),_c('v-btn',{attrs:{\"icon\":\"\"},on:{\"click\":function($event){return _vm.clearPortConsole()}}},[_c('v-icon',{attrs:{\"color\":\"teal darken-4\"}},[_vm._v(\"fas fa-eraser\")])],1)],1)],1),_c('v-flex',{attrs:{\"xs12\":\"\",\"pb-3\":\"\"}},[_c('v-card',{staticClass:\"scroll scrollbar-style mx-3\",attrs:{\"height\":\"300px\",\"color\":\"teal lighten-4 elevation-0\"}},[_c('v-card-text',{staticClass:\"black--text text-darken-4\"},[_c('table',_vm._l((_vm.portConsoleTxt),function(line,index){return _c('tr',{key:index},[(line.charAt(1) == '>')?_c('td',{staticClass:\"font-weight-meduim\"},[_vm._v(_vm._s(line))]):_c('td',{staticClass:\"red--text text-darken-1 font-weight-meduim\"},[_vm._v(_vm._s(line))])])}),0)])],1)],1)],1)],1)],1),_c('v-dialog',{attrs:{\"persistent\":\"\",\"max-width\":\"600px\"},model:{value:(_vm.leavePortPanelDialog),callback:function ($$v) {_vm.leavePortPanelDialog=$$v},expression:\"leavePortPanelDialog\"}},[_c('v-card',{attrs:{\"color\":\"teal lighten-5\"}},[_c('v-card-title',{staticClass:\"teal--text text--darken-2 headline\"},[_c('v-icon',{attrs:{\"color\":\"teal darken-2\",\"large\":\"\",\"left\":\"\"}},[_vm._v(\"fas fa-exclamation-circle\")]),_vm._v(\"Leave Port Panel\\n      \")],1),_c('v-card-text',[_c('p',[_vm._v(\"The port will be closed after leaving Port Panel, are you sure you want to leave?\")])]),_c('v-card-actions',[_c('v-btn',{staticClass:\"teal--text\",attrs:{\"flat\":\"\"},on:{\"click\":function($event){_vm.leavePortPanelDialog = false}}},[_vm._v(\"Cancel\")]),_c('v-spacer'),_c('v-btn',{staticClass:\"white--text\",attrs:{\"color\":\"error\"},on:{\"click\":function($event){return _vm.closePortPanelDialog()}}},[_vm._v(\"Yes\")])],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <!-- Port dialog -->\n  <v-layout row justify-center>\n    <v-dialog v-model=\"doShowPortPanel\" persistent fullscreen transition=\"dialog-bottom-transition\">\n      <v-card>\n        <v-toolbar dark color=\"teal\">\n          <v-btn\n            icon\n            dark\n            @click=\"openPortDis == true ? leavePortPanelDialog = true : doShowPortPanel = false\"\n          >\n            <v-icon>close</v-icon>\n          </v-btn>\n          <v-toolbar-title>Port Panel</v-toolbar-title>\n          <v-spacer></v-spacer>\n          <v-toolbar-items>\n            <v-btn dark flat :disabled=\"openPortDis\" @click=\"openPort(selectedPortObject.comName)\">\n              <v-icon left>fas fa-door-open</v-icon>Open Port\n            </v-btn>\n          </v-toolbar-items>\n          <v-toolbar-items>\n            <v-btn\n              dark\n              flat\n              :disabled=\"closePortDis\"\n              @click=\"closePort(selectedPortObject.comName)\"\n            >\n              <v-icon left>fas fa-times-circle</v-icon>Close Port\n            </v-btn>\n          </v-toolbar-items>\n          <v-toolbar-items>\n            <v-btn\n              dark\n              flat\n              :disabled=\"flushPortDis\"\n              @click=\"flushPort(selectedPortObject.comName)\"\n            >\n              <v-icon left>fas fa-arrow-alt-circle-down</v-icon>Flush Data\n            </v-btn>\n          </v-toolbar-items>\n          <v-toolbar-items>\n            <v-btn\n              dark\n              flat\n              :disabled=\"resumePortDis\"\n              @click=\"resumePort(selectedPortObject.comName)\"\n            >\n              <v-icon left>fas fa-play-circle</v-icon>Resume Data\n            </v-btn>\n          </v-toolbar-items>\n          <v-toolbar-items>\n            <v-btn\n              dark\n              flat\n              :disabled=\"pausePortDis\"\n              @click=\"pausePort(selectedPortObject.comName)\"\n            >\n              <v-icon left>fas fa-pause-circle</v-icon>Pause Data\n            </v-btn>\n          </v-toolbar-items>\n        </v-toolbar>\n        <v-alert\n          :value=\"true\"\n          type=\"info\"\n          color=\"teal darken-4\"\n          transition=\"fade-transition\"\n          class=\"mx-3\"\n        >Only \"Port Name\" is guaranteed 100%, other information is related to the connected device of the current port.</v-alert>\n        <v-list v-if=\"selectedPortObject != undefined\">\n          <v-list-tile avatar>\n            <v-list-tile-content>\n              <v-list-tile-title>Port Name</v-list-tile-title>\n              <v-list-tile-sub-title>{{ selectedPortObject.comName }}</v-list-tile-sub-title>\n            </v-list-tile-content>\n          </v-list-tile>\n          <v-list-tile avatar>\n            <v-list-tile-content>\n              <v-list-tile-title>Manufacturer</v-list-tile-title>\n              <v-list-tile-sub-title>{{ selectedPortObject.manufacturer }}</v-list-tile-sub-title>\n            </v-list-tile-content>\n          </v-list-tile>\n          <v-list-tile avatar>\n            <v-list-tile-content>\n              <v-list-tile-title>Serial Number</v-list-tile-title>\n              <v-list-tile-sub-title>{{ selectedPortObject.serialNumber }}</v-list-tile-sub-title>\n            </v-list-tile-content>\n          </v-list-tile>\n          <v-list-tile avatar>\n            <v-list-tile-content>\n              <v-list-tile-title>Plug and Play ID</v-list-tile-title>\n              <v-list-tile-sub-title>{{ selectedPortObject.pnpId }}</v-list-tile-sub-title>\n            </v-list-tile-content>\n          </v-list-tile>\n          <v-list-tile avatar>\n            <v-list-tile-content>\n              <v-list-tile-title>Procudt ID</v-list-tile-title>\n              <v-list-tile-sub-title>{{ selectedPortObject.productId }}</v-list-tile-sub-title>\n            </v-list-tile-content>\n          </v-list-tile>\n          <v-list-tile avatar>\n            <v-list-tile-content>\n              <v-list-tile-title>Vendor ID</v-list-tile-title>\n              <v-list-tile-sub-title>{{ selectedPortObject.vendorId }}</v-list-tile-sub-title>\n            </v-list-tile-content>\n          </v-list-tile>\n        </v-list>\n        <v-divider></v-divider>\n        <v-layout row wrap>\n          <v-flex xs12 px-3>\n            <v-toolbar\n              color=\"teal lighten-4\"\n              class=\"elevation-0 mt-2 teal--text text--darken-1\"\n              card\n            >\n              <v-text-field\n                v-model=\"writeToPortTextField\"\n                label=\"Commands\"\n                solo\n                class=\"pt-2 teal--text text--darken-4\"\n              ></v-text-field>\n              <v-fade-transition>\n                <v-btn\n                  v-if=\"writeToPortTextField != ''\"\n                  icon\n                  @click=\"sendCommandToPort(selectedPortObject.comName)\"\n                >\n                  <v-icon color=\"teal darken-4\">fas fa-paper-plane</v-icon>\n                </v-btn>\n              </v-fade-transition>\n              <v-btn icon @click=\"clearPortConsole()\">\n                <v-icon color=\"teal darken-4\">fas fa-eraser</v-icon>\n              </v-btn>\n            </v-toolbar>\n          </v-flex>\n          <v-flex xs12 pb-3>\n            <v-card\n              height=\"300px\"\n              color=\"teal lighten-4 elevation-0\"\n              class=\"scroll scrollbar-style mx-3\"\n            >\n              <v-card-text class=\"black--text text-darken-4\">\n                <table>\n                  <tr v-for=\"(line, index) in portConsoleTxt\" :key=\"index\">\n                    <td v-if=\"line.charAt(1) == '>'\" class=\"font-weight-meduim\">{{line}}</td>\n                    <td v-else class=\"red--text text-darken-1 font-weight-meduim\">{{line}}</td>\n                  </tr>\n                </table>\n              </v-card-text>\n            </v-card>\n          </v-flex>\n        </v-layout>\n      </v-card>\n    </v-dialog>\n    <!-- Leave Port panel Dialog -->\n    <v-dialog v-model=\"leavePortPanelDialog\" persistent max-width=\"600px\">\n      <v-card color=\"teal lighten-5\">\n        <v-card-title class=\"teal--text text--darken-2 headline\">\n          <v-icon color=\"teal darken-2\" large left>fas fa-exclamation-circle</v-icon>Leave Port Panel\n        </v-card-title>\n        <v-card-text>\n          <p>The port will be closed after leaving Port Panel, are you sure you want to leave?</p>\n        </v-card-text>\n        <v-card-actions>\n          <v-btn flat class=\"teal--text\" @click=\"leavePortPanelDialog = false\">Cancel</v-btn>\n          <v-spacer></v-spacer>\n          <v-btn color=\"error\" class=\"white--text\" @click=\"closePortPanelDialog()\">Yes</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-layout>\n</template>\n\n<script>\nimport PortsServices from \"@/services/ports.js\";\nimport { mapMutations } from \"vuex\";\n\nexport default {\n  data: () => ({\n    //? to show or hide ports console bottom sheet\n    doShowPortPanel: false,\n    selectedPortObject: undefined,\n    //? to enable and disable control btns of port console panel\n    leavePortPanelDialog: false,\n    flushPortDis: true,\n    pausePortDis: true,\n    resumePortDis: true,\n    openPortDis: false,\n    closePortDis: true,\n    //? write to port console\n    writeToPortTextField: \"\",\n    writeToPortProgress: false,\n    writeToPortProgressValue: \"\",\n    portConsoleTxt: []\n  }),\n  sockets: {\n    onSinglePortData(data) {\n      if (data.target === localStorage.id) this.onSinglePortDataCallback(data);\n    }\n  },\n  methods: {\n    ...mapMutations([\"SET_TRANSMISSION_PROCESS_STATE\"]),\n    onSinglePortDataCallback(data) {\n      this.portConsoleTxt.unshift(\"-> data received: \" + data.data);\n    },\n    pausePort(portName) {\n      this.portConsoleTxt.unshift(\n        \"-> Pause emitting data on port: \" + portName\n      );\n      PortsServices.pauseEmittingPort(portName)\n        .then(result => {\n          this.portConsoleTxt.unshift(\"-> Emitting data on port is paused\");\n          this.resumePortDis = false; //! means enable btn\n          this.pausePortDis = true; //! means disable btn\n          this.$parent.$parent.showSuccessSnackbar(result.success);\n        })\n        .catch(error => {\n          if (!error.includes(\"TypeError\")) {\n            this.portConsoleTxt.unshift(\"Error occurred: \" + error);\n            this.$parent.$parent.showErrorSnackbar(error);\n          }\n        });\n    },\n    resumePort(portName) {\n      this.portConsoleTxt.unshift(\n        \"-> Resume emitting data on port: \" + portName\n      );\n      PortsServices.resumeEmittingPort(portName)\n        .then(result => {\n          this.portConsoleTxt.unshift(\"-> Emitting data on port is resumed\");\n          this.pausePortDis = false;\n          this.resumePortDis = true;\n          this.$parent.$parent.showSuccessSnackbar(result.success);\n        })\n        .catch(error => {\n          if (!error.includes(\"TypeError\")) {\n            this.portConsoleTxt.unshift(\"Error occurred: \" + error);\n            this.$parent.$parent.showErrorSnackbar(error);\n          }\n        });\n    },\n    flushPort(portName) {\n      this.portConsoleTxt.unshift(\"-> Flushing data on port: \" + portName);\n      PortsServices.flushPort(portName)\n        .then(result => {\n          this.portConsoleTxt.unshift(\"-> Data is flushed\");\n          this.$parent.$parent.showSuccessSnackbar(result.success);\n        })\n        .catch(error => {\n          if (!error.includes(\"TypeError\")) {\n            this.portConsoleTxt.unshift(\"Error occurred: \" + error);\n            this.$parent.$parent.showErrorSnackbar(error);\n          }\n        });\n    },\n    openPort(portName) {\n      this.portConsoleTxt.unshift(\"-> Opening port: \" + portName);\n      PortsServices.openPort(portName)\n        .then(result => {\n          this.portConsoleTxt.unshift(\"-> Port is opened\");\n          this.$parent.$parent.showSuccessSnackbar(result);\n          this.openPortDis = true;\n          this.resumePortDis = true;\n          this.closePortDis = false;\n          this.pausePortDis = false;\n          this.flushPortDis = false;\n        })\n        .catch(error => {\n          if (!error.includes(\"TypeError\")) {\n            this.portConsoleTxt.unshift(\"Error occurred: \" + error);\n            this.$parent.$parent.showErrorSnackbar(error);\n          }\n        });\n    },\n    closePort(portName) {\n      this.portConsoleTxt.unshift(\"-> Closing port: \" + portName);\n      PortsServices.closePort(portName)\n        .then(result => {\n          this.portConsoleTxt.unshift(\"-> Port is closed\");\n          this.$parent.$parent.showSuccessSnackbar(result);\n          this.openPortDis = false;\n          this.resumePortDis = true;\n          this.closePortDis = true;\n          this.pausePortDis = true;\n          this.flushPortDis = true;\n        })\n        .catch(error => {\n          if (!error.includes(\"TypeError\")) {\n            this.portConsoleTxt.unshift(\"Error occurred: \" + error);\n            this.$parent.$parent.showErrorSnackbar(error);\n          }\n        });\n    },\n    sendCommandToPort(portName) {\n      if (\n        this.writeToPortTextField != \"\" &&\n        this.writeToPortTextField != undefined\n      ) {\n        this.portConsoleTxt.unshift(\"Writing: \" + this.writeToPortTextField);\n        PortsServices.writeToPort(portName, this.writeToPortTextField + \"\\r\")\n          .then(result => {\n            this.writeToPortTextField = \"\";\n            this.$parent.$parent.showSuccessSnackbar(result);\n          })\n          .catch(error => {\n            if (!error.includes(\"TypeError\")) {\n              this.portConsoleTxt.unshift(\"Error occurred: \" + error);\n              this.$parent.$parent.showErrorSnackbar(error);\n            }\n          });\n      } else {\n        this.$parent.$parent.showErrorSnackbar(\"Can NOT send empty data!!\");\n      }\n    },\n    closePortPanelDialog() {\n      PortsServices.closePort(this.selectedPortObject.comName)\n        .then(() => {\n          this.leavePortPanelDialog = false;\n          this.doShowPortPanel = false;\n          this.openPortDis = true;\n          this.resumePortDis = true;\n          this.closePortDis = false;\n          this.pausePortDis = false;\n          this.flushPortDis = false;\n        })\n        .catch(error => {\n          if (!error.includes(\"TypeError\")) {\n            this.portConsoleTxt.unshift(\"Error occurred: \" + error);\n            this.$parent.$parent.showErrorSnackbar(error);\n          }\n        });\n    },\n    showPortPanel(portObject) {\n      this.selectedPortObject = portObject;\n      PortsServices.isPortOpen(portObject.comName)\n        .then(isOpen => {\n          this.isSelectedPortOpened = isOpen;\n          PortsServices.isPortActive(portObject.comName)\n            .then(isPortActive => {\n              if (isPortActive) {\n                this.doShowPortPanel = false;\n                this.$parent.$parent.showErrorSnackbar(\n                  \"The port is already active, you can't use the panel\"\n                );\n              } else {\n                this.doShowPortPanel = true;\n              }\n            })\n            .catch(error => {\n              this.$parent.$parent.showErrorSnackbar(\n                \"Error while checking port activeness status!\" + error\n              );\n            });\n          if (isOpen) {\n            this.openPortDis = true;\n            this.closePortDis = false;\n          } else {\n            this.openPortDis = false;\n            this.closePortDis = true;\n          }\n        })\n        .catch(error => {\n          this.$parent.$parent.showErrorSnackbar(\n            \"Error while checking port open status!\" + error\n          );\n        });\n    },\n    clearPortConsole() {\n      this.portConsoleTxt = [];\n    }\n  }\n};\n</script>\n\n<style>\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PortPanelDialog.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PortPanelDialog.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PortPanelDialog.vue?vue&type=template&id=4108f9ae&\"\nimport script from \"./PortPanelDialog.vue?vue&type=script&lang=js&\"\nexport * from \"./PortPanelDialog.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}