{"version":3,"sources":["webpack:///./src/components/resources/ImageDisplayDialog.vue?b976","webpack:///src/components/resources/ImageDisplayDialog.vue","webpack:///./src/components/resources/ImageDisplayDialog.vue?694e","webpack:///./src/components/resources/ImageDisplayDialog.vue","webpack:///./src/services/ports.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","fullscreen","hide-overlay","transition","model","value","callback","$$v","imagePanel","expression","dark","color","disabled","closeImagePanelBtnDis","icon","on","click","$event","prepareToCloseImagePanel","_v","_s","currentFileName","disableImagePanelToolbarBtns","flat","displayDeleteFileConfirmationDialog","left","prepareQuickDrawOperation","id","src","imageURL","contain","max-height","consolesArea","row","wrap","pa-1","xs12","sm12","md12","lg6","d-flex","lg12","staticClass","card","dense","undefined","currentActivePort","stopSendDis","bottom","scopedSlots","_u","key","fn","data","_g","stopSendOperation","resumeSendDis","resumeSendOperation","pauseSendDis","pauseSendOperation","_e","clearTransmissionConsole","showTranmsissionConsole","directives","name","rawName","height","_l","line","index","split","flushPortDis","flushPort","resumePortDis","resumePort","pausePortDis","pausePort","clearPortConsole","showPortConsole","ref","staticRenderFns","DeleteFileConfirmationDialog","__webpack_require__","e","then","bind","PortsListDialog","ConversionDialog","ImageDisplayDialogvue_type_script_lang_js_","components","port","portConsoleTxt","transmissionConsoleTxt","sockets","onPortData","target","localStorage","onPortDataCallback","onTransmissionLog","onTransmissionLogCallback","onServerStatusChanged","status","$parent","showSuccessSnackbar","closePort","computed","Object","objectSpread","vuex_esm","isTransmissionProcessActive","methods","content","length","unshift","selecteDeletionType","deleteSelectedImage","$refs","deleteFileConfirmationDialogRef","toggoleDialogVisibility","displayImage","path","_this","toggoleInProgress","files","getImageData","result","ext","catch","error","showErrorSnackbar","_this2","deleteImage","splitted","gcodeFileName","doesGcodeFileExistInItems","conversionDialogRef","hideDialog","displayPortsListDialog","toggleDialogVisibility","portsListDialogRef","togglePortsListDialogeVisibility","fetchPortsList","startTransmitingGCode","portName","_this3","showProgress","fileName","SET_CURRENT_ACTIVE_PORT","ports","performFullDrawOperation","hideProgress","SET_TRANSMISSION_PROCESS_STATE","success","failure","reStartConversionProcess","_reStartConversionProcess","asyncToGenerator","regeneratorRuntime","mark","_callee","_this4","_context","prev","next","scaleAxes","deleteGcodeFile","showParamsForm","stop","apply","arguments","initializeDialog","_this5","pauseEmittingPort","_this6","resumeEmittingPort","_this7","_this8","_this9","_this10","_this11","getFileType","resources_ImageDisplayDialogvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","url","PortServices","Promise","_ref","_mnt_5056DE3D56DE238E_WorkSpace_Memoire_Versions_project_client_node_modules_babel_runtime_corejs2_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","resolve","reject","axios","get","response","AgentServices","RefreshToken","getConnectedPortsList","request","message","_x","_x2","_ref2","_callee2","_context2","params","isOpen","isPortOpen","_x3","_x4","_ref3","_callee3","_context3","isPortActive","_x5","_x6","_ref4","_callee4","_context4","isServerActive","_x7","_x8","post","openPort","writeToPort"],"mappings":"uHAAA,IAAAA,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAAA,EAAA,YAAgCE,MAAA,CAAOC,WAAA,GAAAC,eAAA,GAAAC,WAAA,4BAA0EC,MAAA,CAAQC,MAAAX,EAAA,WAAAY,SAAA,SAAAC,GAAgDb,EAAAc,WAAAD,GAAmBE,WAAA,eAA0B,CAAAX,EAAA,UAAAA,EAAA,aAA+BE,MAAA,CAAOU,KAAA,GAAAC,MAAA,mBAAoC,CAAAb,EAAA,SAAcE,MAAA,CAAOY,SAAAlB,EAAAmB,sBAAAC,KAAA,GAAAJ,KAAA,IAAyDK,GAAA,CAAKC,MAAA,SAAAC,GAAyB,OAAAvB,EAAAwB,8BAAwC,CAAApB,EAAA,UAAAJ,EAAAyB,GAAA,6BAAArB,EAAA,mBAAAJ,EAAAyB,GAAAzB,EAAA0B,GAAA1B,EAAA2B,oBAAAvB,EAAA,YAAAA,EAAA,mBAAAA,EAAA,SAAgKE,MAAA,CAAOY,SAAAlB,EAAA4B,6BAAAZ,KAAA,GAAAa,KAAA,IAAgER,GAAA,CAAKC,MAAA,SAAAC,GAAyB,OAAAvB,EAAA8B,yCAAmD,CAAA1B,EAAA,UAAeE,MAAA,CAAOyB,KAAA,KAAW,CAAA/B,EAAAyB,GAAA,sBAAAzB,EAAAyB,GAAA,0BAAArB,EAAA,SAA4EE,MAAA,CAAOY,SAAAlB,EAAA4B,6BAAAZ,KAAA,GAAAa,KAAA,IAAgER,GAAA,CAAKC,MAAA,SAAAC,GAAyB,OAAAvB,EAAAgC,+BAAyC,CAAA5B,EAAA,UAAeE,MAAA,CAAOyB,KAAA,KAAW,CAAA/B,EAAAyB,GAAA,yBAAAzB,EAAAyB,GAAA,gCAAArB,EAAA,eAAAA,EAAA,OAAqGE,MAAA,CAAO2B,GAAA,YAAgB,CAAA7B,EAAA,SAAcE,MAAA,CAAO4B,IAAAlC,EAAAmC,SAAAC,QAAA,GAAAC,aAAA,UAAoD,MAAArC,EAAAsC,aAAAlC,EAAA,YAAgDE,MAAA,CAAOiC,IAAA,GAAAC,KAAA,GAAAC,OAAA,KAA8B,CAAArC,EAAA,UAAeE,MAAA,CAAOoC,KAAA,GAAAC,KAAA,GAAAC,KAAA,GAAAC,IAAA,GAAAJ,OAAA,KAAkD,CAAArC,EAAA,YAAiBE,MAAA,CAAOiC,IAAA,GAAAC,KAAA,KAAoB,CAAApC,EAAA,UAAeE,MAAA,CAAOwC,SAAA,GAAAJ,KAAA,GAAAC,KAAA,GAAAC,KAAA,GAAAG,KAAA,KAAqD,CAAA3C,EAAA,aAAkB4C,YAAA,wCAAA1C,MAAA,CAA2DW,MAAA,iBAAAgC,KAAA,GAAAjC,KAAA,GAAAkC,MAAA,KAAyD,CAAA9C,EAAA,mBAAAJ,EAAAyB,GAAA,kCAAArB,EAAA,iBAAA+C,GAAAnD,EAAAoD,kBAAAhD,EAAA,OAAAA,EAAA,aAA+IE,MAAA,CAAOY,SAAAlB,EAAAqD,YAAAC,OAAA,IAAuCC,YAAAvD,EAAAwD,GAAA,EAAsBC,IAAA,YAAAC,GAAA,SAAAC,GAAkC,OAAAvD,EAAA,QAAAJ,EAAA4D,GAAA,CAA2BtD,MAAA,CAAOY,SAAAlB,EAAAqD,YAAAjC,KAAA,IAAqCC,GAAA,CAAKC,MAAA,SAAAC,GAAyB,OAAAvB,EAAA6D,uBAAiCF,EAAAtC,IAAA,CAAAjB,EAAA,UAAAJ,EAAAyB,GAAA,gCAA6D,qBAAyB,CAAArB,EAAA,QAAAJ,EAAAyB,GAAA,wCAAArB,EAAA,aAA4EE,MAAA,CAAOY,SAAAlB,EAAA8D,cAAAR,OAAA,IAAyCC,YAAAvD,EAAAwD,GAAA,EAAsBC,IAAA,YAAAC,GAAA,SAAAC,GAAkC,OAAAvD,EAAA,QAAAJ,EAAA4D,GAAA,CAA2BtD,MAAA,CAAOY,SAAAlB,EAAA8D,cAAA1C,KAAA,IAAuCC,GAAA,CAAKC,MAAA,SAAAC,GAAyB,OAAAvB,EAAA+D,yBAAmCJ,EAAAtC,IAAA,CAAAjB,EAAA,UAAAJ,EAAAyB,GAAA,gCAA6D,qBAAyB,CAAArB,EAAA,QAAAJ,EAAAyB,GAAA,0CAAArB,EAAA,aAA8EE,MAAA,CAAOY,SAAAlB,EAAAgE,aAAAV,OAAA,IAAwCC,YAAAvD,EAAAwD,GAAA,EAAsBC,IAAA,YAAAC,GAAA,SAAAC,GAAkC,OAAAvD,EAAA,QAAAJ,EAAA4D,GAAA,CAA2BtD,MAAA,CAAOY,SAAAlB,EAAAgE,aAAA5C,KAAA,IAAsCC,GAAA,CAAKC,MAAA,SAAAC,GAAyB,OAAAvB,EAAAiE,wBAAkCN,EAAAtC,IAAA,CAAAjB,EAAA,UAAAJ,EAAAyB,GAAA,iCAA8D,qBAAyB,CAAArB,EAAA,QAAAJ,EAAAyB,GAAA,0CAAAzB,EAAAkE,KAAA9D,EAAA,aAAuFE,MAAA,CAAOgD,OAAA,IAAYC,YAAAvD,EAAAwD,GAAA,EAAsBC,IAAA,YAAAC,GAAA,SAAAC,GAAkC,OAAAvD,EAAA,QAAAJ,EAAA4D,GAAA,CAA2BtD,MAAA,CAAOc,KAAA,IAAUC,GAAA,CAAKC,MAAA,SAAAC,GAAyB,OAAAvB,EAAAmE,8BAAwCR,EAAAtC,IAAA,CAAAjB,EAAA,UAAAJ,EAAAyB,GAAA,2BAAwD,qBAAyB,CAAArB,EAAA,QAAAJ,EAAAyB,GAAA,yBAAArB,EAAA,SAAyDE,MAAA,CAAOc,KAAA,IAAUC,GAAA,CAAKC,MAAA,SAAAC,GAAyBvB,EAAAoE,yBAAApE,EAAAoE,2BAA6D,CAAAhE,EAAA,UAAAJ,EAAAyB,GAAAzB,EAAA0B,GAAA1B,EAAAoE,wBAAA,0DAAAhE,EAAA,UAAoIE,MAAA,CAAOwC,SAAA,GAAAJ,KAAA,GAAAC,KAAA,GAAAC,KAAA,GAAAG,KAAA,KAAqD,CAAA3C,EAAA,wBAAAA,EAAA,UAA0CiE,WAAA,EAAaC,KAAA,OAAAC,QAAA,SAAA5D,MAAAX,EAAA,wBAAAe,WAAA,4BAAsGiC,YAAA,yBAAA1C,MAAA,CAA8CW,MAAA,6BAAAuD,OAAA,UAAuD,CAAApE,EAAA,eAAoB4C,YAAA,uBAAkC,CAAA5C,EAAA,QAAAJ,EAAAyE,GAAAzE,EAAA,gCAAA0E,EAAAC,GAAsE,OAAAvE,EAAA,MAAgBqD,IAAAkB,EAAA3B,YAAA,sBAA2C,CAAA5C,EAAA,MAAW4C,YAAA,sBAAiC,CAAAhD,EAAAyB,GAAAzB,EAAA0B,GAAAgD,EAAAE,MAAA,YAAAxE,EAAA,MAAAJ,EAAAyB,GAAAzB,EAAA0B,GAAA,KAAAgD,EAAAE,MAAA,gBAA4F,yBAAAxE,EAAA,UAAwCE,MAAA,CAAOoC,KAAA,GAAAC,KAAA,GAAAC,KAAA,GAAAC,IAAA,GAAAJ,OAAA,KAAkD,CAAArC,EAAA,YAAiBE,MAAA,CAAOiC,IAAA,GAAAC,KAAA,KAAoB,CAAApC,EAAA,UAAeE,MAAA,CAAOoC,KAAA,GAAAC,KAAA,GAAAC,KAAA,GAAAG,KAAA,KAAyC,CAAA3C,EAAA,aAAkB4C,YAAA,wCAAA1C,MAAA,CAA2DW,MAAA,iBAAAgC,KAAA,GAAAjC,KAAA,GAAAkC,MAAA,KAAyD,CAAA9C,EAAA,mBAAAJ,EAAAyB,GAAA,uBAAArB,EAAA,iBAAA+C,GAAAnD,EAAAoD,kBAAAhD,EAAA,OAAAA,EAAA,aAAoIE,MAAA,CAAOY,SAAAlB,EAAA6E,aAAAvB,OAAA,IAAwCC,YAAAvD,EAAAwD,GAAA,EAAsBC,IAAA,YAAAC,GAAA,SAAAC,GAAkC,OAAAvD,EAAA,QAAAJ,EAAA4D,GAAA,CAA2BtD,MAAA,CAAOY,SAAAlB,EAAA6E,aAAAzD,KAAA,IAAsCC,GAAA,CAAKC,MAAA,SAAAC,GAAyB,OAAAvB,EAAA8E,eAAyBnB,EAAAtC,IAAA,CAAAjB,EAAA,UAAAJ,EAAAyB,GAAA,iCAA8D,qBAAyB,CAAArB,EAAA,QAAAJ,EAAAyB,GAAA,yDAAArB,EAAA,aAA6FE,MAAA,CAAOY,SAAAlB,EAAA+E,cAAAzB,OAAA,IAAyCC,YAAAvD,EAAAwD,GAAA,EAAsBC,IAAA,YAAAC,GAAA,SAAAC,GAAkC,OAAAvD,EAAA,QAAAJ,EAAA4D,GAAA,CAA2BtD,MAAA,CAAOY,SAAAlB,EAAA+E,cAAA3D,KAAA,IAAuCC,GAAA,CAAKC,MAAA,SAAAC,GAAyB,OAAAvB,EAAAgF,gBAA0BrB,EAAAtC,IAAA,CAAAjB,EAAA,UAAAJ,EAAAyB,GAAA,gCAA6D,oBAAwB,CAAArB,EAAA,QAAAJ,EAAAyB,GAAA,4CAAArB,EAAA,aAAgFE,MAAA,CAAOY,SAAAlB,EAAAiF,aAAA3B,OAAA,IAAwCC,YAAAvD,EAAAwD,GAAA,EAAsBC,IAAA,YAAAC,GAAA,SAAAC,GAAkC,OAAAvD,EAAA,QAAAJ,EAAA4D,GAAA,CAA2BtD,MAAA,CAAOY,SAAAlB,EAAAiF,aAAA7D,KAAA,IAAsCC,GAAA,CAAKC,MAAA,SAAAC,GAAyB,OAAAvB,EAAAkF,eAAyBvB,EAAAtC,IAAA,CAAAjB,EAAA,UAAAJ,EAAAyB,GAAA,iCAA8D,qBAAyB,CAAArB,EAAA,QAAAJ,EAAAyB,GAAA,+CAAAzB,EAAAkE,KAAA9D,EAAA,aAA4FE,MAAA,CAAOgD,OAAA,IAAYC,YAAAvD,EAAAwD,GAAA,EAAsBC,IAAA,YAAAC,GAAA,SAAAC,GAAkC,OAAAvD,EAAA,QAAAJ,EAAA4D,GAAA,CAA2BtD,MAAA,CAAOc,KAAA,IAAUC,GAAA,CAAKC,MAAA,SAAAC,GAAyB,OAAAvB,EAAAmF,sBAAgCxB,EAAAtC,IAAA,CAAAjB,EAAA,UAAAJ,EAAAyB,GAAA,2BAAwD,qBAAyB,CAAArB,EAAA,QAAAJ,EAAAyB,GAAA,yBAAArB,EAAA,SAAyDE,MAAA,CAAOc,KAAA,IAAUC,GAAA,CAAKC,MAAA,SAAAC,GAAyBvB,EAAAoF,iBAAApF,EAAAoF,mBAA6C,CAAAhF,EAAA,UAAAJ,EAAAyB,GAAAzB,EAAA0B,GAAA1B,EAAAoF,gBAAA,0DAAAhF,EAAA,UAA4HE,MAAA,CAAOwC,SAAA,GAAAJ,KAAA,GAAAC,KAAA,GAAAC,KAAA,GAAAG,KAAA,KAAqD,CAAA3C,EAAA,wBAAAA,EAAA,UAA0CiE,WAAA,EAAaC,KAAA,OAAAC,QAAA,SAAA5D,MAAAX,EAAA,gBAAAe,WAAA,oBAAsFiC,YAAA,yBAAA1C,MAAA,CAA8CW,MAAA,6BAAAuD,OAAA,UAAuD,CAAApE,EAAA,eAAoB4C,YAAA,uBAAkC,CAAA5C,EAAA,QAAAJ,EAAAyE,GAAAzE,EAAA,wBAAA0E,EAAAC,GAA8D,OAAAvE,EAAA,MAAgBqD,IAAAkB,EAAA3B,YAAA,sBAA2C,CAAA5C,EAAA,MAAW4C,YAAA,sBAAiC,CAAAhD,EAAAyB,GAAAzB,EAAA0B,GAAAgD,EAAAE,MAAA,YAAAxE,EAAA,MAAAJ,EAAAyB,GAAAzB,EAAA0B,GAAA,IAAAgD,EAAAE,MAAA,gBAA2F,6BAAA5E,EAAAkE,MAAA,WAAA9D,EAAA,oBAA2EiF,IAAA,wBAA0BjF,EAAA,mBAAwBiF,IAAA,uBAAyBjF,EAAA,gCAAqCiF,IAAA,qCAAsC,IACvrOC,EAAA,uFCoOAC,EAAA,kBACAC,EAAAC,EAAA,kBAAAC,KAAAF,EAAAG,KAAA,eACAC,EAAA,kBAAAJ,EAAAC,EAAA,kBAAAC,KAAAF,EAAAG,KAAA,eACAE,EAAA,kBAAAL,EAAAC,EAAA,kBAAAC,KAAAF,EAAAG,KAAA,eAEAG,EAAA,CACAC,WAAA,CACAR,+BACAK,kBACAC,oBAEAlC,KAAA,kBACAxB,cAAAgB,EACArC,YAAA,EAEAwB,cAAA,EAEA0D,UAAA7C,EACA8C,eAAA,GACAC,uBAAA,GACA9B,yBAAA,EACAgB,iBAAA,EAEA/B,aAAA,EACAW,cAAA,EACAF,eAAA,EAEAe,cAAA,EACAI,cAAA,EACAF,eAAA,EACA5D,uBAAA,IAEAgF,QAAA,CACAC,WADA,SACAzC,GACAA,EAAA0C,QAAAC,aAAArE,IACAhC,KAAAsG,mBAAA5C,SAGA6C,kBANA,SAMA7C,GACAA,EAAA0C,QAAAC,aAAArE,IACAhC,KAAAwG,0BAAA9C,SAGA+C,sBAXA,SAWA/C,GACA,IAAAgD,EAAAhD,EAAAgD,OACA1G,KAAAoD,aAAAsD,EACA1G,KAAA+D,cAAA2C,EACAA,GAAAhD,EAAA0C,QAAAC,aAAArE,KACAhC,KAAA2G,QAAAC,oBACA,mCAEA5G,KAAA6G,UAAA7G,KAAAmD,mBACAnD,KAAAkB,uBAAA,KAIA4F,SAAAC,OAAAC,EAAA,KAAAD,CAAA,GACAA,OAAAE,EAAA,KAAAF,CAAA,CACA,8BACA,oBACA,oBAJA,CAOApF,6BAPA,WAQA,OAAA3B,KAAAkH,+BAGAC,QAAAJ,OAAAC,EAAA,KAAAD,CAAA,GACAA,OAAAE,EAAA,KAAAF,CAAA,CACA,iCACA,0BACA,0BAJA,CAMAT,mBANA,SAMAc,GACA,GAAAA,EAAAC,QAGArH,KAAAgG,eAAAsB,QAAAF,IAGAZ,0BAbA,SAaA9C,GACA,GAAAA,EAAA2D,QAGArH,KAAAiG,uBAAAqB,QAAA5D,IAGA6D,oBApBA,WAqBAvH,KAAAwH,sBACAxH,KAAAyH,MAAAC,gCAAAC,2BAEAC,aAxBA,SAwBAvD,EAAAwD,GAAA,IAAAC,EAAA9H,KACAA,KAAA2G,QAAAoB,oBACAC,EAAA,KAAAC,aAAAJ,GACApC,KAAA,SAAAyC,GACAJ,EAAAnB,QAAAoB,oBAEAD,EAAAjH,YAAA,EACAiH,EAAA5F,SAAA,cAAAgG,EAAAC,IAAA,WAAAD,EAAAxE,OAEA0E,MAAA,SAAAC,GACAP,EAAAnB,QAAAoB,oBACAD,EAAAnB,QAAA2B,kBAAAD,MAGAxG,oCAtCA,WAuCA7B,KAAAyH,MAAAC,gCAAAC,2BAEAH,oBAzCA,WAyCA,IAAAe,EAAAvI,KACAgI,EAAA,KAAAQ,YAAAxI,KAAA0B,iBACA+D,KAAA,WACA8C,EAAA1H,YAAA,EACA0H,EAAA5B,QAAAC,oBAAA,gCAEAwB,MAAA,SAAAC,GACAE,EAAA5B,QAAA2B,kBAAAD,MAGAtG,0BAnDA,WAoDA,IAAA0G,EAAAzI,KAAA0B,gBAAAiD,MAAA,KACA+D,EAAAD,EAAA,OAAAA,EAAA,YACAzI,KAAA2G,QAAAgC,0BAAAD;;AAEA1I,KAAAyH,MAAAmB,oBAAAC,aACA7I,KAAA8I,0BAEA9I,KAAAyH,MAAAmB,oBAAAG,0BAGAD,uBA9DA,WA+DA9I,KAAAyH,MAAAuB,mBAAAC,mCACAjJ,KAAAyH,MAAAuB,mBAAAE,kBAEAC,sBAlEA,SAkEAC,GAAA,IAAAC,EAAArJ,KAGA,GAFAA,KAAAyH,MAAAuB,mBAAAM,oBAEApG,IAAAlD,KAAA0B,iBAAA,KAAA1B,KAAA0B,gBAAA,CAEA,IAAA+G,EAAAzI,KAAA0B,gBAAAiD,MAAA,KACA4E,EAAAd,EAAA,OAAAA,EAAA,GAGAzI,KAAAkB,uBAAA,EACAlB,KAAAwJ,wBAAAJ,GACAK,EAAA,KAAAC,yBAAAH,EAAAH,GACA3D,KAAA,SAAAyC,GACAmB,EAAA5B,MAAAuB,mBAAAW,eAEAN,EAAAhH,cAAA,EAEAgH,EAAA5B,MAAAuB,mBAAAC,mCAEAI,EAAAtF,cAAA,EACAsF,EAAAjG,aAAA,EAEAiG,EAAArE,cAAA,EACAqE,EAAAzE,cAAA,EAEAyE,EAAAO,gCAAA,GACAP,EAAA1C,QAAAC,oBAAAsB,EAAA2B,WAEAzB,MAAA,SAAAC,GACAgB,EAAAnI,uBAAA,EAEAmI,EAAA5B,MAAAuB,mBAAAC,mCACAI,EAAAG,6BAAAtG,GAEAmG,EAAA1C,QAAA2B,kBAAAD,EAAAyB,QAAAnF,MAAA,gBAWA3E,KAAAyH,MAAAuB,mBAAAC,mCACAjJ,KAAA2G,QAAA2B,kBAAA,gCAGAyB,yBAnHA,eAAAC,EAAAjD,OAAAkD,EAAA,KAAAlD,CAAAmD,mBAAAC,KAAA,SAAAC,IAAA,IAAA1B,EAAA2B,EAAArK,KAAA,OAAAkK,mBAAA3H,KAAA,SAAA+H,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAqHAxK,KAAAyK,UAAA,EAEA/B,EACA1I,KAAA0B,gBAAAiD,MAAA,QACA,IACA3E,KAAA0B,gBAAAiD,MAAA,QACA,SA3HA2F,EAAAE,KAAA,EA6HAxC,EAAA,KAAA0C,gBAAAhC,GACAjD,KAAA;;AAIA4E,EAAA5C,MAAAmB,oBAAA+B,mBAEAvC,MAAA,WACAiC,EAAA1D,QAAA2B,kBACA,0FAtIA,wBAAAgC,EAAAM,SAAAR,EAAApK,SAAA,SAAA+J,IAAA,OAAAC,EAAAa,MAAA7K,KAAA8K,WAAA,OAAAf,EAAA,GA0IAxI,yBA1IA,WA4IAvB,KAAAqC,cAAA,EAEArC,KAAAgG,eAAA,GACAhG,KAAAiG,uBAAA,GACAjG,KAAAyH,MAAAmB,oBAAAmC,mBAEA/K,KAAAa,YAAA,GAEAoE,UApJA,WAoJA,IAAA+F,EAAAhL,KACAA,KAAAmD,kBACAsG,EAAA,KAAAwB,kBAAAjL,KAAAmD,mBACAsC,KAAA,SAAAyC,GACA8C,EAAAlG,eAAA;AACAkG,EAAAhG,cAAA;AACAgG,EAAArE,QAAAC,oBAAAsB,EAAA2B,WAEAzB,MAAA,SAAAC,GACA2C,EAAArE,QAAA2B,kBAAAD,KAGArI,KAAA2G,QAAA2B,kBAAA,uBAGAvD,WAnKA,WAmKA,IAAAmG,EAAAlL,KACAA,KAAAmD,kBACAsG,EAAA,KAAA0B,mBAAAnL,KAAAmD,mBACAsC,KAAA,SAAAyC,GACAgD,EAAAlG,cAAA,EACAkG,EAAApG,eAAA,EACAoG,EAAAvE,QAAAC,oBAAAsB,EAAA2B,WAEAzB,MAAA,SAAAC,GACA6C,EAAAvE,QAAA2B,kBAAAD,KAGArI,KAAA2G,QAAA2B,kBAAA,uBAGAzD,UAlLA,WAkLA,IAAAuG,EAAApL,KACAA,KAAAmD,kBACAsG,EAAA,KAAA5E,UAAA7E,KAAAmD,mBACAsC,KAAA,SAAAyC,GACAkD,EAAAzE,QAAAC,oBAAAsB,EAAA2B,WAEAzB,MAAA,SAAAC,GACA+C,EAAAzE,QAAA2B,kBAAAD,KAGArI,KAAA2G,QAAA2B,kBAAA,uBAGAzB,UA/LA,SA+LAd,GAAA,IAAAsF,EAAArL,KACAyJ,EAAA,KAAA5C,UAAAd,GACAN,KAAA,WACA4F,EAAArF,eAAAsB,QAAA,iCACA+D,EAAAzG,cAAA,EACAyG,EAAArG,cAAA,IAEAoD,MAAA,SAAAC,GACAgD,EAAArF,eAAAsB,QACA,sCAAAe,GAEAgD,EAAA1E,QAAA2B,kBAAAD,MAGAzE,kBA7MA,WA6MA,IAAA0H,EAAAtL,KACAA,KAAAmD,kBACAsG,EAAA,KAAA7F,kBAAA5D,KAAAmD,mBACAsC,KAAA,SAAAyC,GAEAoD,EAAAvH,cAAA,EACAuH,EAAAzH,eAAA,EACAyH,EAAAlI,aAAA,EACAkI,EAAA1B,gCAAA,GACA0B,EAAA3E,QAAAC,oBAAAsB,EAAA2B,WAEAzB,MAAA,SAAAC,GACAiD,EAAA3E,QAAA2B,kBAAAD,KAGArI,KAAA2G,QAAA2B,kBACA,+CAIAtE,mBAjOA,WAiOA,IAAAuH,EAAAvL,KACAA,KAAAmD,kBACAsG,EAAA,KAAAzF,mBAAAhE,KAAAmD,mBACAsC,KAAA,SAAAyC,GACAqD,EAAA1H,eAAA,EACA0H,EAAAxH,cAAA,EACAwH,EAAA5E,QAAAC,oBAAAsB,EAAA2B,WAEAzB,MAAA,SAAAC,GACAkD,EAAA5E,QAAA2B,kBAAAD,KAGArI,KAAA2G,QAAA2B,kBACA,+CAIAxE,oBAlPA,WAkPA,IAAA0H,EAAAxL,KACAA,KAAAmD,kBACAsG,EAAA,KAAA3F,oBAAA9D,KAAAmD,mBACAsC,KAAA,SAAAyC,GACAsD,EAAAzH,cAAA,EACAyH,EAAA3H,eAAA,EACA2H,EAAA7E,QAAAC,oBAAAsB,EAAA2B,WAEAzB,MAAA,SAAAC,GACAmD,EAAA7E,QAAA2B,kBAAAD,KAGArI,KAAA2G,QAAA2B,kBACA,+CAIApD,iBAnQA,WAoQAlF,KAAAgG,eAAA,IAEA9B,yBAtQA,WAuQAlE,KAAAiG,uBAAA,IAEAwF,YAzQA,WA0QA,aAEA7E,oBA5QA,SA4QAQ,GACApH,KAAA2G,QAAAC,oBAAAQ,IAEAkB,kBA/QA,SA+QAlB,GACApH,KAAA2G,QAAA2B,kBAAAlB,OCxjB2WsE,EAAA,cCO3WC,EAAgB5E,OAAA6E,EAAA,KAAA7E,CACd2E,EACA5L,EACAuF,GACF,EACA,KACA,KACA,MAIewG,EAAA,WAAAF,gICdTG,EAAM,kBAENC,6HAME,OAAO,IAAIC,QAAJ,eAAAC,EAAAlF,OAAAmF,EAAA,KAAAnF,CAAAmD,mBAAAC,KAAY,SAAAC,EAAO+B,EAASC,GAAhB,OAAAlC,mBAAA3H,KAAA,SAAA+H,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACT6B,IAAMC,IAAIR,EAAM,KAAKrG,KAAK,SAACyC,GAC7BiE,EAAQjE,EAAOxE,QAChB0E,MAAM,SAACC,GACFA,EAAMkE,SACuB,KAAzBlE,EAAMkE,SAAS7F,OACf8F,OAAcC,eACThH,KAAK,WACF0G,EAAQJ,EAAaW,2BAExBtE,MAAM,SAAAC,GACH+D,EAAO/D,KAKf+D,EAAO/D,EAAMkE,SAAS7I,KAAKoG,SAExBzB,EAAMsE,QACbP,EAAO,kCAGPA,EAAO/D,EAAMuE,WAtBN,wBAAAtC,EAAAM,SAAAR,MAAZ,gBAAAyC,EAAAC,GAAA,OAAAb,EAAApB,MAAA7K,KAAA8K,YAAA,uCA2BO1B,GACd,OAAO,IAAI4C,QAAJ,eAAAe,EAAAhG,OAAAmF,EAAA,KAAAnF,CAAAmD,mBAAAC,KAAY,SAAA6C,EAAOb,EAASC,GAAhB,OAAAlC,mBAAA3H,KAAA,SAAA0K,GAAA,eAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cAAAyC,EAAAzC,KAAA,EACT6B,IAAMC,IAAIR,EAAM,UAAW,CACzBoB,OAAQ,CACJ9D,SAAUA,KAGjB3D,KAAK,SAACyC,GACHiE,EAAQjE,EAAOxE,KAAKyJ,UAEvB/E,MAAM,SAACC,GACAA,EAAMkE,SACuB,KAAzBlE,EAAMkE,SAAS7F,OACf8F,OAAcC,eACThH,KAAK,WACF0G,EAAQJ,EAAaqB,WAAWhE,MAEnChB,MAAM,SAAAC,GACH+D,EAAO/D,KAKf+D,EAAO/D,EAAMkE,SAAS7I,KAAKoG,SAExBzB,EAAMsE,QACbP,EAAO,kCAGPA,EAAO/D,EAAMuE,WA5BV,wBAAAK,EAAArC,SAAAoC,MAAZ,gBAAAK,EAAAC,GAAA,OAAAP,EAAAlC,MAAA7K,KAAA8K,YAAA,yCAiCS1B,GAChB,OAAO,IAAI4C,QAAJ,eAAAuB,EAAAxG,OAAAmF,EAAA,KAAAnF,CAAAmD,mBAAAC,KAAY,SAAAqD,EAAOrB,EAASC,GAAhB,OAAAlC,mBAAA3H,KAAA,SAAAkL,GAAA,eAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,cAAAiD,EAAAjD,KAAA,EACT6B,IAAMC,IAAIR,EAAM,YAAa,CAC3BoB,OAAQ,CACJ9D,SAAUA,KAGjB3D,KAAK,SAACyC,GACHiE,EAAQjE,EAAOxE,KAAKgD,UAEvB0B,MAAM,SAACC,GACAA,EAAMkE,SACuB,KAAzBlE,EAAMkE,SAAS7F,OACf8F,OAAcC,eACThH,KAAK,WACF0G,EAAQJ,EAAa2B,aAAatE,MAErChB,MAAM,SAAAC,GACH+D,EAAO/D,KAKf+D,EAAO/D,EAAMkE,SAAS7I,KAAKoG,SAExBzB,EAAMsE,QACbP,EAAO,kCAGPA,EAAO/D,EAAMuE,WA5BV,wBAAAa,EAAA7C,SAAA4C,MAAZ,gBAAAG,EAAAC,GAAA,OAAAL,EAAA1C,MAAA7K,KAAA8K,YAAA,6CAkCP,OAAO,IAAIkB,QAAJ,eAAA6B,EAAA9G,OAAAmF,EAAA,KAAAnF,CAAAmD,mBAAAC,KAAY,SAAA2D,EAAO3B,EAASC,GAAhB,OAAAlC,mBAAA3H,KAAA,SAAAwL,GAAA,eAAAA,EAAAxD,KAAAwD,EAAAvD,MAAA,cAAAuD,EAAAvD,KAAA,EACT6B,IAAMC,IAAIR,EAAM,kBACjBrG,KAAK,SAACyC,GACHiE,EAAQjE,EAAOxE,KAAKgD,UAEvB0B,MAAM,SAACC,GACAA,EAAMkE,SACuB,KAAzBlE,EAAMkE,SAAS7F,OACf8F,OAAcC,eACThH,KAAK,WACF0G,EAAQJ,EAAaiC,oBAExB5F,MAAM,SAAAC,GACH+D,EAAO/D,KAKf+D,EAAO/D,EAAMkE,SAAS7I,KAAKoG,SAExBzB,EAAMsE,QACbP,EAAO,kCAGPA,EAAO/D,EAAMuE,WAxBV,wBAAAmB,EAAAnD,SAAAkD,MAAZ,gBAAAG,EAAAC,GAAA,OAAAL,EAAAhD,MAAA7K,KAAA8K,YAAA,qDA6BqBvB,EAAUH,GACtC,OAAO,IAAI4C,QAAQ,SAACG,EAASC,GACzBC,IAAM8B,KAAKrC,EAAM,QAAS,CACtBvC,WACAH,WACAhD,OAAQC,aAAarE,KACtByD,KAAK,SAACyC,GACLiE,EAAQjE,EAAOxE,QAChB0E,MAAM,SAACC,GACFA,EAAMkE,SACuB,KAAzBlE,EAAMkE,SAAS7F,OACf8F,OAAcC,eACThH,KAAK,WACF0G,EAAQJ,EAAarC,8BAExBtB,MAAM,SAAAC,GACH+D,EAAO/D,KAKf+D,EAAO/D,EAAMkE,SAAS7I,MAEnB2E,EAAMsE,QACbP,EAAO,kCAGPA,EAAO/D,EAAMuE,+CAKZxD,GACb,OAAO,IAAI4C,QAAQ,SAACG,EAASC,GACzBC,IAAM8B,KAAKrC,EAAM,SAAU,CACvB1C,aACD3D,KAAK,SAACyC,GACLiE,EAAQjE,EAAOxE,QAChB0E,MAAM,SAACC,GACFA,EAAMkE,SACuB,KAAzBlE,EAAMkE,SAAS7F,OACf8F,OAAcC,eACThH,KAAK,WACF0G,EAAQJ,EAAalH,UAAUuE,MAElChB,MAAM,SAAAC,GACH+D,EAAO/D,KAKf+D,EAAO/D,EAAMkE,SAAS7I,KAAKoG,SAExBzB,EAAMsE,QACbP,EAAO,kCAGPA,EAAO/D,EAAMuE,wDAKHxD,GACtB,OAAO,IAAI4C,QAAQ,SAACG,EAASC,GACzBC,IAAM8B,KAAKrC,EAAM,UAAW,CACxB1C,aACD3D,KAAK,SAACyC,GACLiE,EAAQjE,EAAOxE,QAChB0E,MAAM,SAACC,GACFA,EAAMkE,SACuB,KAAzBlE,EAAMkE,SAAS7F,OACf8F,OAAcC,eACThH,KAAK,WACF0G,EAAQJ,EAAaZ,mBAAmB/B,MAE3ChB,MAAM,SAAAC,GACH+D,EAAO/D,KAKf+D,EAAO/D,EAAMkE,SAAS7I,KAAKoG,SAExBzB,EAAMsE,QACbP,EAAO,kCAGPA,EAAO/D,EAAMuE,uDAKJxD,GACrB,OAAO,IAAI4C,QAAQ,SAACG,EAASC,GACzBC,IAAM8B,KAAKrC,EAAM,SAAU,CACvB1C,aACD3D,KAAK,SAACyC,GACLiE,EAAQjE,EAAOxE,QAChB0E,MAAM,SAACC,GACFA,EAAMkE,SACuB,KAAzBlE,EAAMkE,SAAS7F,OACf8F,OAAcC,eACThH,KAAK,WACF0G,EAAQJ,EAAad,kBAAkB7B,MAE1ChB,MAAM,SAAAC,GACH+D,EAAO/D,KAKf+D,EAAO/D,EAAMkE,SAAS7I,KAAKoG,SAExBzB,EAAMsE,QACbP,EAAO,kCAGPA,EAAO/D,EAAMuE,wDAKHxD,GACtB,OAAO,IAAI4C,QAAQ,SAACG,EAASC,GACzBC,IAAM8B,KAAKrC,EAAM,cAAe,CAC5B1C,WACAhD,OAAQC,aAAarE,KACtByD,KAAK,SAACyC,GACLiE,EAAQjE,EAAOxE,QAChB0E,MAAM,SAACC,GACFA,EAAMkE,SACuB,KAAzBlE,EAAMkE,SAAS7F,OACf8F,OAAcC,eACThH,KAAK,WACF0G,EAAQJ,EAAa/H,mBAAmBoF,MAE3ChB,MAAM,SAAAC,GACH+D,EAAO/D,KAKf+D,EAAO/D,EAAMkE,SAAS7I,KAAKoG,SAExBzB,EAAMsE,QACbP,EAAO,kCAGPA,EAAO/D,EAAMuE,yDAKFxD,GACvB,OAAO,IAAI4C,QAAQ,SAACG,EAASC,GACzBC,IAAM8B,KAAKrC,EAAM,eAAgB,CAC7B1C,WACAhD,OAAQC,aAAarE,KACtByD,KAAK,SAACyC,GACLiE,EAAQjE,EAAOxE,QAChB0E,MAAM,SAACC,GACFA,EAAMkE,SACuB,KAAzBlE,EAAMkE,SAAS7F,OACf8F,OAAcC,eACThH,KAAK,WACF0G,EAAQJ,EAAajI,oBAAoBsF,MAE5ChB,MAAM,SAAAC,GACH+D,EAAO/D,KAKf+D,EAAO/D,EAAMkE,SAAS7I,KAAKoG,SAExBzB,EAAMsE,QACbP,EAAO,kCAGPA,EAAO/D,EAAMuE,uDAKJxD,GACrB,OAAO,IAAI4C,QAAQ,SAACG,EAASC,GACzBC,IAAM8B,KAAKrC,EAAM,aAAc,CAC3B1C,WACAhD,OAAQC,aAAarE,KACtByD,KAAK,SAACyC,GACLiE,EAAQjE,EAAOxE,QAChB0E,MAAM,SAACC,GACFA,EAAMkE,SACuB,KAAzBlE,EAAMkE,SAAS7F,OACf8F,OAAcC,eACThH,KAAK,WACF0G,EAAQJ,EAAanI,kBAAkBwF,MAE1ChB,MAAM,SAAAC,GACH+D,EAAO/D,KAKf+D,EAAO/D,EAAMkE,SAAS7I,KAAKoG,SAExBzB,EAAMsE,QACbP,EAAO,kCAGPA,EAAO/D,EAAMuE,8CAKbxD,GACZ,OAAO,IAAI4C,QAAQ,SAACG,EAASC,GACzBC,IAAM8B,KAAKrC,EAAM,QAAS,CACtB1C,WACAhD,OAAQC,aAAarE,KACtByD,KAAK,SAACyC,GACLiE,EAAQjE,EAAOxE,KAAKmG,WACrBzB,MAAM,SAACC,GACFA,EAAMkE,SACuB,KAAzBlE,EAAMkE,SAAS7F,OACf8F,OAAcC,eACThH,KAAK,WACF0G,EAAQJ,EAAaqC,SAAShF,MAEjChB,MAAM,SAAAC,GACH+D,EAAO/D,KAKf+D,EAAO/D,EAAMkE,SAAS7I,KAAKoG,SAExBzB,EAAMsE,QACbP,EAAO,kCAGPA,EAAO/D,EAAMuE,+CAKZxD,GACb,OAAO,IAAI4C,QAAQ,SAACG,EAASC,GACzBC,IAAM8B,KAAKrC,EAAM,SAAU,CACvB1C,aACD3D,KAAK,SAACyC,GACLiE,EAAQjE,EAAOxE,KAAKmG,WACrBzB,MAAM,SAACC,GACFA,EAAMkE,SACuB,KAAzBlE,EAAMkE,SAAS7F,OACf8F,OAAcC,eACThH,KAAK,WACF0G,EAAQJ,EAAalF,UAAUuC,MAElChB,MAAM,SAAAC,GACH+D,EAAO/D,KAKf+D,EAAO/D,EAAMkE,SAAS7I,KAAKoG,SAExBzB,EAAMsE,QACbP,EAAO,kCAGPA,EAAO/D,EAAMuE,iDAKVxD,EAAU1F,GACzB,OAAO,IAAIsI,QAAQ,SAACG,EAASC,GACzBC,IAAM8B,KAAKrC,EAAM,SAAU,CACvB1C,WACA1F,SACD+B,KAAK,SAACyC,GACLiE,EAAQjE,EAAOxE,KAAKmG,WACrBzB,MAAM,SAACC,GACFA,EAAMkE,SACuB,KAAzBlE,EAAMkE,SAAS7F,OACf8F,OAAcC,eACThH,KAAK,WACF0G,EAAQJ,EAAasC,YAAYjF,MAEpChB,MAAM,SAAAC,GACH+D,EAAO/D,KAKf+D,EAAO/D,EAAMkE,SAAS7I,KAAKoG,SAExBzB,EAAMsE,QACbP,EAAO,kCAGPA,EAAO/D,EAAMuE,sBAMlBb","file":"js/chunk-c12baf44.19e1a61e.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-dialog',{attrs:{\"fullscreen\":\"\",\"hide-overlay\":\"\",\"transition\":\"dialog-bottom-transition\"},model:{value:(_vm.imagePanel),callback:function ($$v) {_vm.imagePanel=$$v},expression:\"imagePanel\"}},[_c('v-card',[_c('v-toolbar',{attrs:{\"dark\":\"\",\"color\":\"teal lighten-1\"}},[_c('v-btn',{attrs:{\"disabled\":_vm.closeImagePanelBtnDis,\"icon\":\"\",\"dark\":\"\"},on:{\"click\":function($event){return _vm.prepareToCloseImagePanel()}}},[_c('v-icon',[_vm._v(\"fas fa-times-circle\")])],1),_c('v-toolbar-title',[_vm._v(_vm._s(_vm.currentFileName))]),_c('v-spacer'),_c('v-toolbar-items',[_c('v-btn',{attrs:{\"disabled\":_vm.disableImagePanelToolbarBtns,\"dark\":\"\",\"flat\":\"\"},on:{\"click\":function($event){return _vm.displayDeleteFileConfirmationDialog()}}},[_c('v-icon',{attrs:{\"left\":\"\"}},[_vm._v(\"fas fa-trash-alt\")]),_vm._v(\"Delete\\n          \")],1),_c('v-btn',{attrs:{\"disabled\":_vm.disableImagePanelToolbarBtns,\"dark\":\"\",\"flat\":\"\"},on:{\"click\":function($event){return _vm.prepareQuickDrawOperation()}}},[_c('v-icon',{attrs:{\"left\":\"\"}},[_vm._v(\"fas fa-pencil-ruler\")]),_vm._v(\"Draw\\n          \")],1)],1)],1),_c('v-card-text',[_c('div',{attrs:{\"id\":\"preview\"}},[_c('v-img',{attrs:{\"src\":_vm.imageURL,\"contain\":\"\",\"max-height\":\"600\"}})],1),(_vm.consolesArea == true)?_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\",\"pa-1\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\",\"sm12\":\"\",\"md12\":\"\",\"lg6\":\"\",\"pa-1\":\"\"}},[_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"d-flex\":\"\",\"xs12\":\"\",\"sm12\":\"\",\"md12\":\"\",\"lg12\":\"\"}},[_c('v-toolbar',{staticClass:\"elevation-0 teal--text text--darken-1\",attrs:{\"color\":\"teal lighten-4\",\"card\":\"\",\"dark\":\"\",\"dense\":\"\"}},[_c('v-toolbar-title',[_vm._v(\"Transmission Process Console\")]),_c('v-spacer'),(_vm.currentActivePort != undefined)?_c('div',[_c('v-tooltip',{attrs:{\"disabled\":_vm.stopSendDis,\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(data){return [_c('v-btn',_vm._g({attrs:{\"disabled\":_vm.stopSendDis,\"icon\":\"\"},on:{\"click\":function($event){return _vm.stopSendOperation()}}},data.on),[_c('v-icon',[_vm._v(\"fas fa-stop-circle\")])],1)]}}],null,false,3872761588)},[_c('span',[_vm._v(\"Stop sending gcode lines to port\")])]),_c('v-tooltip',{attrs:{\"disabled\":_vm.resumeSendDis,\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(data){return [_c('v-btn',_vm._g({attrs:{\"disabled\":_vm.resumeSendDis,\"icon\":\"\"},on:{\"click\":function($event){return _vm.resumeSendOperation()}}},data.on),[_c('v-icon',[_vm._v(\"fas fa-play-circle\")])],1)]}}],null,false,3717983400)},[_c('span',[_vm._v(\"Resume sending gcode lines to port\")])]),_c('v-tooltip',{attrs:{\"disabled\":_vm.pauseSendDis,\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(data){return [_c('v-btn',_vm._g({attrs:{\"disabled\":_vm.pauseSendDis,\"icon\":\"\"},on:{\"click\":function($event){return _vm.pauseSendOperation()}}},data.on),[_c('v-icon',[_vm._v(\"fas fa-pause-circle\")])],1)]}}],null,false,2708830910)},[_c('span',[_vm._v(\"Pause sending gcode lines port\")])])],1):_vm._e(),_c('v-tooltip',{attrs:{\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(data){return [_c('v-btn',_vm._g({attrs:{\"icon\":\"\"},on:{\"click\":function($event){return _vm.clearTransmissionConsole()}}},data.on),[_c('v-icon',[_vm._v(\"fas fa-eraser\")])],1)]}}],null,false,2916369172)},[_c('span',[_vm._v(\"Clear the console\")])]),_c('v-btn',{attrs:{\"icon\":\"\"},on:{\"click\":function($event){_vm.showTranmsissionConsole = !_vm.showTranmsissionConsole}}},[_c('v-icon',[_vm._v(_vm._s(_vm.showTranmsissionConsole ? 'keyboard_arrow_down' : 'keyboard_arrow_up'))])],1)],1)],1),_c('v-flex',{attrs:{\"d-flex\":\"\",\"xs12\":\"\",\"sm12\":\"\",\"md12\":\"\",\"lg12\":\"\"}},[_c('v-slide-y-transition',[_c('v-card',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showTranmsissionConsole),expression:\"showTranmsissionConsole\"}],staticClass:\"scroll scrollbar-style\",attrs:{\"color\":\"teal lighten-4 elevation-0\",\"height\":\"300px\"}},[_c('v-card-text',{staticClass:\"teal--text darken-4\"},[_c('table',_vm._l((_vm.transmissionConsoleTxt),function(line,index){return _c('tr',{key:index,staticClass:\"font-weight-medium\"},[_c('td',{staticClass:\"red--text darken-1\"},[_vm._v(_vm._s(line.split(\"|\")[0]))]),_c('td',[_vm._v(_vm._s(\"->\"+line.split(\"|\")[1]))])])}),0)])],1)],1)],1)],1)],1),_c('v-flex',{attrs:{\"xs12\":\"\",\"sm12\":\"\",\"md12\":\"\",\"lg6\":\"\",\"pa-1\":\"\"}},[_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\",\"sm12\":\"\",\"md12\":\"\",\"lg12\":\"\"}},[_c('v-toolbar',{staticClass:\"elevation-0 teal--text text--darken-1\",attrs:{\"color\":\"teal lighten-4\",\"card\":\"\",\"dark\":\"\",\"dense\":\"\"}},[_c('v-toolbar-title',[_vm._v(\"Port Data Console\")]),_c('v-spacer'),(_vm.currentActivePort != undefined)?_c('div',[_c('v-tooltip',{attrs:{\"disabled\":_vm.flushPortDis,\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(data){return [_c('v-btn',_vm._g({attrs:{\"disabled\":_vm.flushPortDis,\"icon\":\"\"},on:{\"click\":function($event){return _vm.flushPort()}}},data.on),[_c('v-icon',[_vm._v(\"fas fa-times-circle\")])],1)]}}],null,false,1727864575)},[_c('span',[_vm._v(\"Flush both incoming and outgoing data on the port\")])]),_c('v-tooltip',{attrs:{\"disabled\":_vm.resumePortDis,\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(data){return [_c('v-btn',_vm._g({attrs:{\"disabled\":_vm.resumePortDis,\"icon\":\"\"},on:{\"click\":function($event){return _vm.resumePort()}}},data.on),[_c('v-icon',[_vm._v(\"fas fa-play-circle\")])],1)]}}],null,false,940483421)},[_c('span',[_vm._v(\"Resume all incoming data on the port\")])]),_c('v-tooltip',{attrs:{\"disabled\":_vm.pausePortDis,\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(data){return [_c('v-btn',_vm._g({attrs:{\"disabled\":_vm.pausePortDis,\"icon\":\"\"},on:{\"click\":function($event){return _vm.pausePort()}}},data.on),[_c('v-icon',[_vm._v(\"fas fa-pause-circle\")])],1)]}}],null,false,1727059243)},[_c('span',[_vm._v(\"Pause all incoming data on the port\")])])],1):_vm._e(),_c('v-tooltip',{attrs:{\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(data){return [_c('v-btn',_vm._g({attrs:{\"icon\":\"\"},on:{\"click\":function($event){return _vm.clearPortConsole()}}},data.on),[_c('v-icon',[_vm._v(\"fas fa-eraser\")])],1)]}}],null,false,2795691963)},[_c('span',[_vm._v(\"Clear the console\")])]),_c('v-btn',{attrs:{\"icon\":\"\"},on:{\"click\":function($event){_vm.showPortConsole = !_vm.showPortConsole}}},[_c('v-icon',[_vm._v(_vm._s(_vm.showPortConsole ? 'keyboard_arrow_down' : 'keyboard_arrow_up'))])],1)],1)],1),_c('v-flex',{attrs:{\"d-flex\":\"\",\"xs12\":\"\",\"sm12\":\"\",\"md12\":\"\",\"lg12\":\"\"}},[_c('v-slide-y-transition',[_c('v-card',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showPortConsole),expression:\"showPortConsole\"}],staticClass:\"scroll scrollbar-style\",attrs:{\"color\":\"teal lighten-4 elevation-0\",\"height\":\"300px\"}},[_c('v-card-text',{staticClass:\"teal--text darken-4\"},[_c('table',_vm._l((_vm.portConsoleTxt),function(line,index){return _c('tr',{key:index,staticClass:\"font-weight-medium\"},[_c('td',{staticClass:\"red--text darken-1\"},[_vm._v(_vm._s(line.split(\"|\")[0]))]),_c('td',[_vm._v(_vm._s(\" \"+line.split(\"|\")[1]))])])}),0)])],1)],1)],1)],1)],1)],1):_vm._e()],1)],1)],1),_c('ConversionDialog',{ref:\"conversionDialogRef\"}),_c('PortsListDialog',{ref:\"portsListDialogRef\"}),_c('DeleteFileConfirmationDialog',{ref:\"deleteFileConfirmationDialogRef\"})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <v-dialog v-model=\"imagePanel\" fullscreen hide-overlay transition=\"dialog-bottom-transition\">\n      <v-card>\n        <v-toolbar dark color=\"teal lighten-1\">\n          <v-btn :disabled=\"closeImagePanelBtnDis\" icon dark @click=\"prepareToCloseImagePanel()\">\n            <v-icon>fas fa-times-circle</v-icon>\n          </v-btn>\n          <v-toolbar-title>{{currentFileName}}</v-toolbar-title>\n          <v-spacer></v-spacer>\n          <v-toolbar-items>\n            <v-btn\n              :disabled=\"disableImagePanelToolbarBtns\"\n              dark\n              flat\n              @click=\"displayDeleteFileConfirmationDialog()\"\n            >\n              <v-icon left>fas fa-trash-alt</v-icon>Delete\n            </v-btn>\n            <v-btn\n              :disabled=\"disableImagePanelToolbarBtns\"\n              dark\n              flat\n              @click=\"prepareQuickDrawOperation()\"\n            >\n              <v-icon left>fas fa-pencil-ruler</v-icon>Draw\n            </v-btn>\n          </v-toolbar-items>\n        </v-toolbar>\n        <!-- Consoles Area & Image Preview -->\n        <v-card-text>\n          <div id=\"preview\">\n            <v-img :src=\"imageURL\" contain max-height=\"600\"/>\n          </div>\n          <!-- Consoles Area -->\n          <v-layout v-if=\"consolesArea == true\" row wrap pa-1>\n            <!-- Transmission Console Area -->\n            <v-flex xs12 sm12 md12 lg6 pa-1>\n              <v-layout row wrap>\n                <v-flex d-flex xs12 sm12 md12 lg12>\n                  <v-toolbar\n                    color=\"teal lighten-4\"\n                    class=\"elevation-0 teal--text text--darken-1\"\n                    card\n                    dark\n                    dense\n                  >\n                    <v-toolbar-title>Transmission Process Console</v-toolbar-title>\n                    <v-spacer></v-spacer>\n                    <div v-if=\"currentActivePort != undefined\">\n                      <v-tooltip :disabled=\"stopSendDis\" bottom>\n                        <template #activator=\"data\">\n                          <v-btn\n                            :disabled=\"stopSendDis\"\n                            v-on=\"data.on\"\n                            icon\n                            @click=\"stopSendOperation()\"\n                          >\n                            <v-icon>fas fa-stop-circle</v-icon>\n                          </v-btn>\n                        </template>\n                        <span>Stop sending gcode lines to port</span>\n                      </v-tooltip>\n                      <v-tooltip :disabled=\"resumeSendDis\" bottom>\n                        <template #activator=\"data\">\n                          <v-btn\n                            :disabled=\"resumeSendDis\"\n                            v-on=\"data.on\"\n                            icon\n                            @click=\"resumeSendOperation()\"\n                          >\n                            <v-icon>fas fa-play-circle</v-icon>\n                          </v-btn>\n                        </template>\n                        <span>Resume sending gcode lines to port</span>\n                      </v-tooltip>\n                      <v-tooltip :disabled=\"pauseSendDis\" bottom>\n                        <template #activator=\"data\">\n                          <v-btn\n                            :disabled=\"pauseSendDis\"\n                            v-on=\"data.on\"\n                            icon\n                            @click=\"pauseSendOperation()\"\n                          >\n                            <v-icon>fas fa-pause-circle</v-icon>\n                          </v-btn>\n                        </template>\n                        <span>Pause sending gcode lines port</span>\n                      </v-tooltip>\n                    </div>\n                    <v-tooltip bottom>\n                      <template #activator=\"data\">\n                        <v-btn v-on=\"data.on\" icon @click=\"clearTransmissionConsole()\">\n                          <v-icon>fas fa-eraser</v-icon>\n                        </v-btn>\n                      </template>\n                      <span>Clear the console</span>\n                    </v-tooltip>\n                    <v-btn icon @click=\"showTranmsissionConsole = !showTranmsissionConsole\">\n                      <v-icon>{{ showTranmsissionConsole ? 'keyboard_arrow_down' : 'keyboard_arrow_up' }}</v-icon>\n                    </v-btn>\n                  </v-toolbar>\n                </v-flex>\n                <v-flex d-flex xs12 sm12 md12 lg12>\n                  <v-slide-y-transition>\n                    <v-card\n                      v-show=\"showTranmsissionConsole\"\n                      color=\"teal lighten-4 elevation-0\"\n                      height=\"300px\"\n                      class=\"scroll scrollbar-style\"\n                    >\n                      <v-card-text class=\"teal--text darken-4\">\n                        <table>\n                          <tr\n                            v-for=\"(line, index) in transmissionConsoleTxt\"\n                            :key=\"index\"\n                            class=\"font-weight-medium\"\n                          >\n                            <td class=\"red--text darken-1\">{{line.split(\"|\")[0]}}</td>\n                            <td>{{\"->\"+line.split(\"|\")[1]}}</td>\n                          </tr>\n                        </table>\n                      </v-card-text>\n                    </v-card>\n                  </v-slide-y-transition>\n                </v-flex>\n              </v-layout>\n            </v-flex>\n            <!-- Port Console Area -->\n            <v-flex xs12 sm12 md12 lg6 pa-1>\n              <v-layout row wrap>\n                <v-flex xs12 sm12 md12 lg12>\n                  <v-toolbar\n                    color=\"teal lighten-4\"\n                    class=\"elevation-0 teal--text text--darken-1\"\n                    card\n                    dark\n                    dense\n                  >\n                    <v-toolbar-title>Port Data Console</v-toolbar-title>\n                    <v-spacer></v-spacer>\n                    <div v-if=\"currentActivePort != undefined\">\n                      <v-tooltip :disabled=\"flushPortDis\" bottom>\n                        <template #activator=\"data\">\n                          <v-btn :disabled=\"flushPortDis\" v-on=\"data.on\" icon @click=\"flushPort()\">\n                            <v-icon>fas fa-times-circle</v-icon>\n                          </v-btn>\n                        </template>\n                        <span>Flush both incoming and outgoing data on the port</span>\n                      </v-tooltip>\n                      <v-tooltip :disabled=\"resumePortDis\" bottom>\n                        <template #activator=\"data\">\n                          <v-btn\n                            :disabled=\"resumePortDis\"\n                            v-on=\"data.on\"\n                            icon\n                            @click=\"resumePort()\"\n                          >\n                            <v-icon>fas fa-play-circle</v-icon>\n                          </v-btn>\n                        </template>\n                        <span>Resume all incoming data on the port</span>\n                      </v-tooltip>\n                      <v-tooltip :disabled=\"pausePortDis\" bottom>\n                        <template #activator=\"data\">\n                          <v-btn :disabled=\"pausePortDis\" v-on=\"data.on\" icon @click=\"pausePort()\">\n                            <v-icon>fas fa-pause-circle</v-icon>\n                          </v-btn>\n                        </template>\n                        <span>Pause all incoming data on the port</span>\n                      </v-tooltip>\n                    </div>\n                    <v-tooltip bottom>\n                      <template #activator=\"data\">\n                        <v-btn v-on=\"data.on\" icon @click=\"clearPortConsole()\">\n                          <v-icon>fas fa-eraser</v-icon>\n                        </v-btn>\n                      </template>\n                      <span>Clear the console</span>\n                    </v-tooltip>\n                    <v-btn icon @click=\"showPortConsole = !showPortConsole\">\n                      <v-icon>{{ showPortConsole ? 'keyboard_arrow_down' : 'keyboard_arrow_up' }}</v-icon>\n                    </v-btn>\n                  </v-toolbar>\n                </v-flex>\n                <v-flex d-flex xs12 sm12 md12 lg12>\n                  <v-slide-y-transition>\n                    <v-card\n                      v-show=\"showPortConsole\"\n                      color=\"teal lighten-4 elevation-0\"\n                      height=\"300px\"\n                      class=\"scroll scrollbar-style\"\n                    >\n                      <v-card-text class=\"teal--text darken-4\">\n                        <table>\n                          <tr\n                            v-for=\"(line, index) in portConsoleTxt\"\n                            :key=\"index\"\n                            class=\"font-weight-medium\"\n                          >\n                            <td class=\"red--text darken-1\">{{line.split(\"|\")[0]}}</td>\n                            <td>{{\" \"+line.split(\"|\")[1]}}</td>\n                          </tr>\n                        </table>\n                      </v-card-text>\n                    </v-card>\n                  </v-slide-y-transition>\n                </v-flex>\n              </v-layout>\n            </v-flex>\n          </v-layout>\n        </v-card-text>\n      </v-card>\n    </v-dialog>\n    <!-- Conversion dialog -->\n    <ConversionDialog ref=\"conversionDialogRef\"/>\n    <!-- Ports List dialoge -->\n    <PortsListDialog ref=\"portsListDialogRef\"/>\n    <!-- Delete file dialoge -->\n    <DeleteFileConfirmationDialog ref=\"deleteFileConfirmationDialogRef\"/>\n  </div>\n</template>\n<script>\n// import ConversionServices from \"@/services/conversion.js\";\nimport PortsServices from \"@/services/ports.js\";\nimport FileServices from \"@/services/files.js\";\n\nimport { mapState, mapMutations } from \"vuex\";\n\nconst DeleteFileConfirmationDialog = () =>\n  import(\"./DeleteFileConfirmationDialog.vue\");\nconst PortsListDialog = () => import(\"@/components/ports/PortsListDialog.vue\");\nconst ConversionDialog = () => import(\"./ConversionDialog.vue\");\n\nexport default {\n  components: {\n    DeleteFileConfirmationDialog,\n    PortsListDialog,\n    ConversionDialog\n  },\n  data: () => ({\n    imageURL: undefined,\n    imagePanel: false,\n    //? data in consoles area ------------------------\n    consolesArea: false,\n    //? this variable is used to operate on the port when the transmission process is going on\n    port: undefined,\n    portConsoleTxt: [],\n    transmissionConsoleTxt: [],\n    showTranmsissionConsole: true,\n    showPortConsole: true,\n    //? to enable and disable control btns of transmission console panel\n    stopSendDis: true,\n    pauseSendDis: true,\n    resumeSendDis: true,\n    //? to enable and disable control btns of port console panel\n    flushPortDis: false,\n    pausePortDis: false,\n    resumePortDis: true,\n    closeImagePanelBtnDis: false\n  }),\n  sockets: {\n    onPortData(data) {\n      if (data.target == localStorage.id) {\n        this.onPortDataCallback(data.data);\n      }\n    },\n    onTransmissionLog(data) {\n      if (data.target == localStorage.id) {\n        this.onTransmissionLogCallback(data.data);\n      }\n    },\n    onServerStatusChanged(data) {\n      let status = data.status;\n      this.stopSendDis = !status;\n      this.pauseSendDis = !status;\n      if (!status && data.target == localStorage.id) {\n        this.$parent.showSuccessSnackbar(\n          \"Transmission Has been completed\"\n        );\n        this.closePort(this.currentActivePort);\n        this.closeImagePanelBtnDis = false;\n      }\n    }\n  },\n  computed: {\n    ...mapState([\n      \"isTransmissionProcessActive\",\n      \"currentActivePort\",\n      \"currentFileName\"\n      // \"id\"\n    ]),\n    disableImagePanelToolbarBtns() {\n      return this.isTransmissionProcessActive;\n    }\n  },\n  methods: {\n    ...mapMutations([\n      \"SET_TRANSMISSION_PROCESS_STATE\",\n      \"SET_CURRENT_ACTIVE_PORT\",\n      \"SET_CURRENT_FILE_NAME\"\n    ]),\n    onPortDataCallback(content) {\n      if (content.length == 0) {\n        // console.warn(\"data is empty!\");\n      } else {\n        this.portConsoleTxt.unshift(content);\n      }\n    },\n    onTransmissionLogCallback(data) {\n      if (data.length == 0) {\n        // console.warn(\"data is empty!\");\n      } else {\n        this.transmissionConsoleTxt.unshift(data);\n      }\n    },\n    selecteDeletionType() {\n      this.deleteSelectedImage();\n      this.$refs.deleteFileConfirmationDialogRef.toggoleDialogVisibility();\n    },\n    displayImage(name, path) {\n      this.$parent.toggoleInProgress();\n      FileServices.getImageData(path)\n        .then(result => {\n          this.$parent.toggoleInProgress();\n          // this.SET_CURRENT_FILE_NAME(name);\n          this.imagePanel = true;\n          this.imageURL = \"data:image/\" + result.ext + \";base64,\" + result.data;\n        })\n        .catch(error => {\n          this.$parent.toggoleInProgress();\n          this.$parent.showErrorSnackbar(error);\n        });\n    },\n    displayDeleteFileConfirmationDialog() {\n      this.$refs.deleteFileConfirmationDialogRef.toggoleDialogVisibility();\n    },\n    deleteSelectedImage() {\n      FileServices.deleteImage(this.currentFileName)\n        .then(() => {\n          this.imagePanel = false;\n          this.$parent.showSuccessSnackbar(\"Image deleted successfully\");\n        })\n        .catch(error => {\n          this.$parent.showErrorSnackbar(error);\n        });\n    },\n    prepareQuickDrawOperation() {\n      const splitted = this.currentFileName.split(\".\");\n      const gcodeFileName = splitted[0] + \".\" + splitted[1] + \".gcode\";\n      if (this.$parent.doesGcodeFileExistInItems(gcodeFileName)) {\n        //! don't use toggleDialogVisibility() here\n        this.$refs.conversionDialogRef.hideDialog();\n        this.displayPortsListDialog();\n      } else {\n        this.$refs.conversionDialogRef.toggleDialogVisibility();\n      }\n    },\n    displayPortsListDialog() {\n      this.$refs.portsListDialogRef.togglePortsListDialogeVisibility();\n      this.$refs.portsListDialogRef.fetchPortsList();\n    },\n    startTransmitingGCode(portName) {\n      this.$refs.portsListDialogRef.showProgress();\n      //? ensuring that the current file name is valide gcode file name\n      if (this.currentFileName !== undefined && this.currentFileName !== \"\") {\n        //? removing the extension from the fileName because the endpoint function uses gcode file name without ext\n        const splitted = this.currentFileName.split(\".\");\n        const fileName = splitted[0] + \".\" + splitted[1];\n        // this.fileName = fileName+\".gcode\";\n        //? disabling image panel close btn\n        this.closeImagePanelBtnDis = true;\n        this.SET_CURRENT_ACTIVE_PORT(portName);\n        PortsServices.performFullDrawOperation(fileName, portName)\n          .then(result => {\n            this.$refs.portsListDialogRef.hideProgress();\n            //? show consoles area\n            this.consolesArea = true;\n            //? hiding ports list dialog\n            this.$refs.portsListDialogRef.togglePortsListDialogeVisibility();\n            //? enabling pause & stop tranmission operations btns\n            this.pauseSendDis = false;\n            this.stopSendDis = false;\n            //? enabling pause & flush port data btns\n            this.pausePortDis = false;\n            this.flushPortDis = false;\n            //? activating transmission state variable\n            this.SET_TRANSMISSION_PROCESS_STATE(true);\n            this.$parent.showSuccessSnackbar(result.success);\n          })\n          .catch(error => {\n            this.closeImagePanelBtnDis = false;\n            //? hiding ports list dialog\n            this.$refs.portsListDialogRef.togglePortsListDialogeVisibility();\n            this.SET_CURRENT_ACTIVE_PORT(undefined);\n            //? showing the error about why the transmission process didn't start\n            this.$parent.showErrorSnackbar(error.failure.split(\":\")[1]);\n            //? disabling these lines becuase the consoles are hidden\n            // this.portConsoleTxt.push(\"Operation: \" + error.operation + \"|\");\n            // this.portConsoleTxt.push(\"Message: \" + error.failure + \"|\");\n            // if (error.isPortClosed) {\n            //   this.portConsoleTxt.push(\n            //     \"Port Status: \" + error.isPortClosed ? \" Closed|\" : \" Opened|\"\n            //   );\n            // }\n          });\n      } else {\n        this.$refs.portsListDialogRef.togglePortsListDialogeVisibility();\n        this.$parent.showErrorSnackbar(\"Gcode file name is missing!\");\n      }\n    },\n    async reStartConversionProcess() {\n      //? reseting scale axes value\n      this.scaleAxes = 0;\n      //? calculating the corresponding gcode file name\n      const gcodeFileName =\n        this.currentFileName.split(\".\")[0] +\n        \".\" +\n        this.currentFileName.split(\".\")[1] +\n        \".gcode\";\n      //? deleting generated gcode file\n      await FileServices.deleteGcodeFile(gcodeFileName)\n        .then(() => {\n          //! this will be deleted by the event\n          // this.$parent.removeGcodeFileFormItems(gcodeFileName);\n          //? showing params form, 'convert' btn & hiding 're-convert' btn\n          this.$refs.conversionDialogRef.showParamsForm();\n        })\n        .catch(() => {\n          this.$parent.showErrorSnackbar(\n            \"There was an error while deleting the generated gcode file, try deleting it manually\"\n          );\n        });\n    },\n    prepareToCloseImagePanel() {\n      //? hide consoles area\n      this.consolesArea = false;\n      //? empty all the consoels data\n      this.portConsoleTxt = [];\n      this.transmissionConsoleTxt = [];\n      this.$refs.conversionDialogRef.initializeDialog();\n      //? close the panel\n      this.imagePanel = false;\n    },\n    pausePort() {\n      if (this.currentActivePort) {\n        PortsServices.pauseEmittingPort(this.currentActivePort)\n          .then(result => {\n            this.resumePortDis = false; //! means enable btn\n            this.pausePortDis = true; //! means disable btn\n            this.$parent.showSuccessSnackbar(result.success);\n          })\n          .catch(error => {\n            this.$parent.showErrorSnackbar(error);\n          });\n      } else {\n        this.$parent.showErrorSnackbar(\"No port is defined\");\n      }\n    },\n    resumePort() {\n      if (this.currentActivePort) {\n        PortsServices.resumeEmittingPort(this.currentActivePort)\n          .then(result => {\n            this.pausePortDis = false;\n            this.resumePortDis = true;\n            this.$parent.showSuccessSnackbar(result.success);\n          })\n          .catch(error => {\n            this.$parent.showErrorSnackbar(error);\n          });\n      } else {\n        this.$parent.showErrorSnackbar(\"No port is defined\");\n      }\n    },\n    flushPort() {\n      if (this.currentActivePort) {\n        PortsServices.flushPort(this.currentActivePort)\n          .then(result => {\n            this.$parent.showSuccessSnackbar(result.success);\n          })\n          .catch(error => {\n            this.$parent.showErrorSnackbar(error);\n          });\n      } else {\n        this.$parent.showErrorSnackbar(\"No port is defined\");\n      }\n    },\n    closePort(port) {\n      PortsServices.closePort(port)\n        .then(() => {\n          this.portConsoleTxt.unshift(\"|Port was closed successfully\");\n          this.flushPortDis = true;\n          this.pausePortDis = true;\n        })\n        .catch(error => {\n          this.portConsoleTxt.unshift(\n            \"Error occurred while closing port: \" + error\n          );\n          this.$parent.showErrorSnackbar(error);\n        });\n    },\n    stopSendOperation() {\n      if (this.currentActivePort) {\n        PortsServices.stopSendOperation(this.currentActivePort)\n          .then(result => {\n            //? disable all btns\n            this.pauseSendDis = true;\n            this.resumeSendDis = true;\n            this.stopSendDis = true;\n            this.SET_TRANSMISSION_PROCESS_STATE(false);\n            this.$parent.showSuccessSnackbar(result.success);\n          })\n          .catch(error => {\n            this.$parent.showErrorSnackbar(error);\n          });\n      } else {\n        this.$parent.showErrorSnackbar(\n          \"No operation is running, port is undefined\"\n        );\n      }\n    },\n    pauseSendOperation() {\n      if (this.currentActivePort) {\n        PortsServices.pauseSendOperation(this.currentActivePort)\n          .then(result => {\n            this.resumeSendDis = false;\n            this.pauseSendDis = true;\n            this.$parent.showSuccessSnackbar(result.success);\n          })\n          .catch(error => {\n            this.$parent.showErrorSnackbar(error);\n          });\n      } else {\n        this.$parent.showErrorSnackbar(\n          \"No operation is running, port is undefined\"\n        );\n      }\n    },\n    resumeSendOperation() {\n      if (this.currentActivePort) {\n        PortsServices.resumeSendOperation(this.currentActivePort)\n          .then(result => {\n            this.pauseSendDis = false;\n            this.resumeSendDis = true;\n            this.$parent.showSuccessSnackbar(result.success);\n          })\n          .catch(error => {\n            this.$parent.showErrorSnackbar(error);\n          });\n      } else {\n        this.$parent.showErrorSnackbar(\n          \"No operation is running, port is undefined\"\n        );\n      }\n    },\n    clearPortConsole() {\n      this.portConsoleTxt = [];\n    },\n    clearTransmissionConsole() {\n      this.transmissionConsoleTxt = [];\n    },\n    getFileType() {\n      return \"img\";\n    },\n    showSuccessSnackbar(content) {\n      this.$parent.showSuccessSnackbar(content);\n    },\n    showErrorSnackbar(content) {\n      this.$parent.showErrorSnackbar(content);\n    }\n  }\n};\n</script>\n<style>\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImageDisplayDialog.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImageDisplayDialog.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ImageDisplayDialog.vue?vue&type=template&id=d9a51a12&\"\nimport script from \"./ImageDisplayDialog.vue?vue&type=script&lang=js&\"\nexport * from \"./ImageDisplayDialog.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import axios from \"axios\";\nimport AgentServices from \"./agent.js\";\n// import store from '../store.js';\n\nconst url = \"api/local/ports\";\n\nclass PortServices {\n    /**\n     * TODO: add token to header\n     * result contains success message, ports count and ports list\n     */\n    static getConnectedPortsList() {\n        return new Promise(async (resolve, reject) => {\n            await axios.get(url + '/').then((result) => {\n                resolve(result.data);\n            }).catch((error) => {\n                if (error.response) {\n                    if (error.response.status == 406) {\n                        AgentServices.RefreshToken()\n                            .then(() => {\n                                resolve(PortServices.getConnectedPortsList());\n                            })\n                            .catch(error => {\n                                reject(error);\n                            });\n                    } else {\n                        //? The request was made and the server responded with a status code\n                        //? that falls out of the range of 2xx\n                        reject(error.response.data.failure);\n                    }\n                } else if (error.request) {\n                    reject(\"Check you internet connection!\");\n                } else {\n                    //? Something happened in setting up the request that triggered an Error\n                    reject(error.message);\n                }\n            });\n        });\n    }\n    static isPortOpen(portName) {\n        return new Promise(async (resolve, reject) => {\n            await axios.get(url + '/isOpen', {\n                    params: {\n                        portName: portName\n                    }\n                })\n                .then((result) => {\n                    resolve(result.data.isOpen);\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        if (error.response.status == 406) {\n                            AgentServices.RefreshToken()\n                                .then(() => {\n                                    resolve(PortServices.isPortOpen(portName));\n                                })\n                                .catch(error => {\n                                    reject(error);\n                                });\n                        } else {\n                            //? The request was made and the server responded with a status code\n                            //? that falls out of the range of 2xx\n                            reject(error.response.data.failure);\n                        }\n                    } else if (error.request) {\n                        reject(\"Check you internet connection!\");\n                    } else {\n                        //? Something happened in setting up the request that triggered an Error\n                        reject(error.message);\n                    }\n                });\n        });\n    }\n    static isPortActive(portName) {\n        return new Promise(async (resolve, reject) => {\n            await axios.get(url + '/isActive', {\n                    params: {\n                        portName: portName\n                    }\n                })\n                .then((result) => {\n                    resolve(result.data.status);\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        if (error.response.status == 406) {\n                            AgentServices.RefreshToken()\n                                .then(() => {\n                                    resolve(PortServices.isPortActive(portName));\n                                })\n                                .catch(error => {\n                                    reject(error);\n                                });\n                        } else {\n                            //? The request was made and the server responded with a status code\n                            //? that falls out of the range of 2xx\n                            reject(error.response.data.failure);\n                        }\n                    } else if (error.request) {\n                        reject(\"Check you internet connection!\");\n                    } else {\n                        //? Something happened in setting up the request that triggered an Error\n                        reject(error.message);\n                    }\n                });\n        });\n    }\n    static isServerActive() {\n        return new Promise(async (resolve, reject) => {\n            await axios.get(url + '/draw/isActive')\n                .then((result) => {\n                    resolve(result.data.status);\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        if (error.response.status == 406) {\n                            AgentServices.RefreshToken()\n                                .then(() => {\n                                    resolve(PortServices.isServerActive());\n                                })\n                                .catch(error => {\n                                    reject(error);\n                                });\n                        } else {\n                            //? The request was made and the server responded with a status code\n                            //? that falls out of the range of 2xx\n                            reject(error.response.data.failure);\n                        }\n                    } else if (error.request) {\n                        reject(\"Check you internet connection!\");\n                    } else {\n                        //? Something happened in setting up the request that triggered an Error\n                        reject(error.message);\n                    }\n                });\n        });\n    }\n    static performFullDrawOperation(fileName, portName) {\n        return new Promise((resolve, reject) => {\n            axios.post(url + \"/draw\", {\n                fileName,\n                portName,\n                target: localStorage.id\n            }).then((result) => {\n                resolve(result.data);\n            }).catch((error) => {\n                if (error.response) {\n                    if (error.response.status == 406) {\n                        AgentServices.RefreshToken()\n                            .then(() => {\n                                resolve(PortServices.performFullDrawOperation());\n                            })\n                            .catch(error => {\n                                reject(error);\n                            });\n                    } else {\n                        //? The request was made and the server responded with a status code\n                        //? that falls out of the range of 2xx\n                        reject(error.response.data);\n                    }\n                } else if (error.request) {\n                    reject(\"Check you internet connection!\");\n                } else {\n                    //? Something happened in setting up the request that triggered an Error\n                    reject(error.message);\n                }\n            });\n        });\n    }\n    static flushPort(portName) {\n        return new Promise((resolve, reject) => {\n            axios.post(url + \"/flush\", {\n                portName\n            }).then((result) => {\n                resolve(result.data);\n            }).catch((error) => {\n                if (error.response) {\n                    if (error.response.status == 406) {\n                        AgentServices.RefreshToken()\n                            .then(() => {\n                                resolve(PortServices.flushPort(portName));\n                            })\n                            .catch(error => {\n                                reject(error);\n                            });\n                    } else {\n                        //? The request was made and the server responded with a status code\n                        //? that falls out of the range of 2xx\n                        reject(error.response.data.failure);\n                    }\n                } else if (error.request) {\n                    reject(\"Check you internet connection!\");\n                } else {\n                    //? Something happened in setting up the request that triggered an Error\n                    reject(error.message);\n                }\n            });\n        });\n    }\n    static resumeEmittingPort(portName) {\n        return new Promise((resolve, reject) => {\n            axios.post(url + \"/resume\", {\n                portName\n            }).then((result) => {\n                resolve(result.data);\n            }).catch((error) => {\n                if (error.response) {\n                    if (error.response.status == 406) {\n                        AgentServices.RefreshToken()\n                            .then(() => {\n                                resolve(PortServices.resumeEmittingPort(portName));\n                            })\n                            .catch(error => {\n                                reject(error);\n                            });\n                    } else {\n                        //? The request was made and the server responded with a status code\n                        //? that falls out of the range of 2xx\n                        reject(error.response.data.failure);\n                    }\n                } else if (error.request) {\n                    reject(\"Check you internet connection!\");\n                } else {\n                    //? Something happened in setting up the request that triggered an Error\n                    reject(error.message);\n                }\n            });\n        });\n    }\n    static pauseEmittingPort(portName) {\n        return new Promise((resolve, reject) => {\n            axios.post(url + \"/pause\", {\n                portName\n            }).then((result) => {\n                resolve(result.data);\n            }).catch((error) => {\n                if (error.response) {\n                    if (error.response.status == 406) {\n                        AgentServices.RefreshToken()\n                            .then(() => {\n                                resolve(PortServices.pauseEmittingPort(portName));\n                            })\n                            .catch(error => {\n                                reject(error);\n                            });\n                    } else {\n                        //? The request was made and the server responded with a status code\n                        //? that falls out of the range of 2xx\n                        reject(error.response.data.failure);\n                    }\n                } else if (error.request) {\n                    reject(\"Check you internet connection!\");\n                } else {\n                    //? Something happened in setting up the request that triggered an Error\n                    reject(error.message);\n                }\n            });\n        });\n    }\n    static pauseSendOperation(portName) {\n        return new Promise((resolve, reject) => {\n            axios.post(url + \"/draw/pause\", {\n                portName,\n                target: localStorage.id\n            }).then((result) => {\n                resolve(result.data);\n            }).catch((error) => {\n                if (error.response) {\n                    if (error.response.status == 406) {\n                        AgentServices.RefreshToken()\n                            .then(() => {\n                                resolve(PortServices.pauseSendOperation(portName));\n                            })\n                            .catch(error => {\n                                reject(error);\n                            });\n                    } else {\n                        //? The request was made and the server responded with a status code\n                        //? that falls out of the range of 2xx\n                        reject(error.response.data.failure);\n                    }\n                } else if (error.request) {\n                    reject(\"Check you internet connection!\");\n                } else {\n                    //? Something happened in setting up the request that triggered an Error\n                    reject(error.message);\n                }\n            });\n        });\n    }\n    static resumeSendOperation(portName) {\n        return new Promise((resolve, reject) => {\n            axios.post(url + \"/draw/resume\", {\n                portName,\n                target: localStorage.id\n            }).then((result) => {\n                resolve(result.data);\n            }).catch((error) => {\n                if (error.response) {\n                    if (error.response.status == 406) {\n                        AgentServices.RefreshToken()\n                            .then(() => {\n                                resolve(PortServices.resumeSendOperation(portName));\n                            })\n                            .catch(error => {\n                                reject(error);\n                            });\n                    } else {\n                        //? The request was made and the server responded with a status code\n                        //? that falls out of the range of 2xx\n                        reject(error.response.data.failure);\n                    }\n                } else if (error.request) {\n                    reject(\"Check you internet connection!\");\n                } else {\n                    //? Something happened in setting up the request that triggered an Error\n                    reject(error.message);\n                }\n            });\n        });\n    }\n    static stopSendOperation(portName) {\n        return new Promise((resolve, reject) => {\n            axios.post(url + \"/draw/stop\", {\n                portName,\n                target: localStorage.id\n            }).then((result) => {\n                resolve(result.data);\n            }).catch((error) => {\n                if (error.response) {\n                    if (error.response.status == 406) {\n                        AgentServices.RefreshToken()\n                            .then(() => {\n                                resolve(PortServices.stopSendOperation(portName));\n                            })\n                            .catch(error => {\n                                reject(error);\n                            });\n                    } else {\n                        //? The request was made and the server responded with a status code\n                        //? that falls out of the range of 2xx\n                        reject(error.response.data.failure);\n                    }\n                } else if (error.request) {\n                    reject(\"Check you internet connection!\");\n                } else {\n                    //? Something happened in setting up the request that triggered an Error\n                    reject(error.message);\n                }\n            });\n        });\n    }\n    static openPort(portName) {\n        return new Promise((resolve, reject) => {\n            axios.post(url + \"/open\", {\n                portName,\n                target: localStorage.id\n            }).then((result) => {\n                resolve(result.data.success);\n            }).catch((error) => {\n                if (error.response) {\n                    if (error.response.status == 406) {\n                        AgentServices.RefreshToken()\n                            .then(() => {\n                                resolve(PortServices.openPort(portName));\n                            })\n                            .catch(error => {\n                                reject(error);\n                            });\n                    } else {\n                        //? The request was made and the server responded with a status code\n                        //? that falls out of the range of 2xx\n                        reject(error.response.data.failure);\n                    }\n                } else if (error.request) {\n                    reject(\"Check you internet connection!\");\n                } else {\n                    //? Something happened in setting up the request that triggered an Error\n                    reject(error.message);\n                }\n            });\n        });\n    }\n    static closePort(portName) {\n        return new Promise((resolve, reject) => {\n            axios.post(url + \"/close\", {\n                portName\n            }).then((result) => {\n                resolve(result.data.success);\n            }).catch((error) => {\n                if (error.response) {\n                    if (error.response.status == 406) {\n                        AgentServices.RefreshToken()\n                            .then(() => {\n                                resolve(PortServices.closePort(portName));\n                            })\n                            .catch(error => {\n                                reject(error);\n                            });\n                    } else {\n                        //? The request was made and the server responded with a status code\n                        //? that falls out of the range of 2xx\n                        reject(error.response.data.failure);\n                    }\n                } else if (error.request) {\n                    reject(\"Check you internet connection!\");\n                } else {\n                    //? Something happened in setting up the request that triggered an Error\n                    reject(error.message);\n                }\n            });\n        });\n    }\n    static writeToPort(portName, data) {\n        return new Promise((resolve, reject) => {\n            axios.post(url + \"/write\", {\n                portName,\n                data\n            }).then((result) => {\n                resolve(result.data.success);\n            }).catch((error) => {\n                if (error.response) {\n                    if (error.response.status == 406) {\n                        AgentServices.RefreshToken()\n                            .then(() => {\n                                resolve(PortServices.writeToPort(portName));\n                            })\n                            .catch(error => {\n                                reject(error);\n                            });\n                    } else {\n                        //? The request was made and the server responded with a status code\n                        //? that falls out of the range of 2xx\n                        reject(error.response.data.failure);\n                    }\n                } else if (error.request) {\n                    reject(\"Check you internet connection!\");\n                } else {\n                    //? Something happened in setting up the request that triggered an Error\n                    reject(error.message);\n                }\n            });\n        });\n    }\n}\nexport default PortServices;"],"sourceRoot":""}