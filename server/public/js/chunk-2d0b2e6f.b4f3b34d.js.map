{"version":3,"sources":["webpack:///./src/components/home/SettingsDialog.vue?0587","webpack:///src/components/home/SettingsDialog.vue","webpack:///./src/components/home/SettingsDialog.vue?3daa","webpack:///./src/components/home/SettingsDialog.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","fullscreen","hide-overlay","transition","model","value","callback","$$v","settingsDialog","expression","dark","color","icon","disabled","doDisableCloseSettingsDialogBtn","on","click","$event","_v","row","wrap","xs12","staticClass","three-line","sm12","md6","lg3","px-2","pl-4","type","label","clearable","error-messages","surfaceWidthErrors","input","$v","surfaceWidth","$touch","blur","surfaceHeightErrors","surfaceHeight","doDisableSurfaceDimensionsUpdateBtn","updateSurfaceDimensions","staticRenderFns","SettingsDialogvue_type_script_lang_js_","mixins","lib","validations","required","validators","minValue","Object","maxValue","data","keepShowingSurfaceDimensionsAlert","computed","objectSpread","vuex_esm","errors","$dirty","push","$invalid","methods","showSettingsDialog","window","localStorage","getItem","setItem","doShowSurfaceDimensionsAlert","TOGGLE_SURFACE_DIMENSIONS_ALERT_STATE","$parent","showSuccessSnackbar","home_SettingsDialogvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/chunk-2d0b2e6f.b4f3b34d.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-dialog',{attrs:{\"fullscreen\":\"\",\"hide-overlay\":\"\",\"transition\":\"dialog-bottom-transition\"},model:{value:(_vm.settingsDialog),callback:function ($$v) {_vm.settingsDialog=$$v},expression:\"settingsDialog\"}},[_c('v-card',[_c('v-toolbar',{attrs:{\"dark\":\"\",\"color\":\"teal\"}},[_c('v-btn',{attrs:{\"icon\":\"\",\"dark\":\"\",\"disabled\":_vm.doDisableCloseSettingsDialogBtn},on:{\"click\":function($event){_vm.settingsDialog = false}}},[_c('v-icon',[_vm._v(\"close\")])],1),_c('v-toolbar-title',[_vm._v(\"Settings\")]),_c('v-spacer')],1),_c('v-card-text',[_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\"}},[_c('v-list',{staticClass:\"py-0\",attrs:{\"three-line\":\"\"}},[_c('v-list-tile',[_c('v-list-tile-content',[_c('v-list-tile-title',[_vm._v(\"The Drawing Surface Dimensions\")]),_c('v-list-tile-sub-title',[_vm._v(\"These two values will be used to generate appropriate gcode coordinates according to the drawing surface of the machine\")])],1)],1)],1)],1)],1),_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\",\"sm12\":\"\",\"md6\":\"\",\"lg3\":\"\",\"px-2\":\"\",\"pl-4\":\"\"}},[_c('v-text-field',{attrs:{\"type\":\"number\",\"label\":\"Width\",\"clearable\":\"\",\"error-messages\":_vm.surfaceWidthErrors},on:{\"input\":function($event){return _vm.$v.surfaceWidth.$touch()},\"blur\":function($event){return _vm.$v.surfaceWidth.$touch()}},model:{value:(_vm.surfaceWidth),callback:function ($$v) {_vm.surfaceWidth=$$v},expression:\"surfaceWidth\"}})],1),_c('v-flex',{attrs:{\"xs12\":\"\",\"sm12\":\"\",\"md6\":\"\",\"lg3\":\"\",\"px-2\":\"\"}},[_c('v-text-field',{attrs:{\"type\":\"number\",\"label\":\"Height\",\"clearable\":\"\",\"error-messages\":_vm.surfaceHeightErrors},on:{\"input\":function($event){return _vm.$v.surfaceHeight.$touch()},\"blur\":function($event){return _vm.$v.surfaceHeight.$touch()}},model:{value:(_vm.surfaceHeight),callback:function ($$v) {_vm.surfaceHeight=$$v},expression:\"surfaceHeight\"}})],1)],1),_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-spacer'),_c('v-btn',{staticClass:\"white--text\",attrs:{\"color\":\"teal\",\"disabled\":_vm.doDisableSurfaceDimensionsUpdateBtn},on:{\"click\":function($event){return _vm.updateSurfaceDimensions()}}},[_vm._v(\"Update\")])],1)],1),_c('v-divider')],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <!-- Settings dialog -->\n  <v-dialog v-model=\"settingsDialog\" fullscreen hide-overlay transition=\"dialog-bottom-transition\">\n    <v-card>\n      <v-toolbar dark color=\"teal\">\n        <v-btn\n          icon\n          dark\n          :disabled=\"doDisableCloseSettingsDialogBtn\"\n          @click=\"settingsDialog = false\"\n        >\n          <v-icon>close</v-icon>\n        </v-btn>\n        <v-toolbar-title>Settings</v-toolbar-title>\n        <v-spacer></v-spacer>\n      </v-toolbar>\n      <v-card-text>\n        <v-layout row wrap>\n          <v-flex xs12>\n            <v-list class=\"py-0\" three-line>\n              <v-list-tile>\n                <v-list-tile-content>\n                  <v-list-tile-title>The Drawing Surface Dimensions</v-list-tile-title>\n                  <v-list-tile-sub-title>These two values will be used to generate appropriate gcode coordinates according to the drawing surface of the machine</v-list-tile-sub-title>\n                </v-list-tile-content>\n              </v-list-tile>\n            </v-list>\n          </v-flex>\n        </v-layout>\n        <v-layout row wrap>\n          <v-flex xs12 sm12 md6 lg3 px-2 pl-4>\n            <v-text-field\n              type=\"number\"\n              label=\"Width\"\n              v-model=\"surfaceWidth\"\n              clearable\n              :error-messages=\"surfaceWidthErrors\"\n              @input=\"$v.surfaceWidth.$touch()\"\n              @blur=\"$v.surfaceWidth.$touch()\"\n            ></v-text-field>\n          </v-flex>\n          <v-flex xs12 sm12 md6 lg3 px-2>\n            <v-text-field\n              type=\"number\"\n              label=\"Height\"\n              v-model=\"surfaceHeight\"\n              clearable\n              :error-messages=\"surfaceHeightErrors\"\n              @input=\"$v.surfaceHeight.$touch()\"\n              @blur=\"$v.surfaceHeight.$touch()\"\n            ></v-text-field>\n          </v-flex>\n        </v-layout>\n        <v-layout row wrap>\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"teal\"\n            class=\"white--text\"\n            :disabled=\"doDisableSurfaceDimensionsUpdateBtn\"\n            @click=\"updateSurfaceDimensions()\"\n          >Update</v-btn>\n        </v-layout>\n      </v-card-text>\n      <v-divider></v-divider>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\nimport { validationMixin } from \"vuelidate\";\nimport { required, minValue, maxValue } from \"vuelidate/lib/validators\";\n\nexport default {\n  mixins: [validationMixin],\n  validations: {\n    surfaceWidth: {\n      required,\n      minValue: minValue(50),\n      maxValue: maxValue(2000)\n    },\n    surfaceHeight: {\n      required,\n      minValue: minValue(50),\n      maxValue: maxValue(2000)\n    }\n  },\n  data: () => ({\n    //? Settings dialog data\n    settingsDialog: false,\n    surfaceHeight: 0,\n    surfaceWidth: 0,\n    keepShowingSurfaceDimensionsAlert: true\n  }),\n  computed: {\n    ...mapState([\"doShowSurfaceDimensionsAlert\"]),\n    surfaceWidthErrors() {\n      const errors = [];\n      if (!this.$v.surfaceWidth.$dirty) return errors;\n      !this.$v.surfaceWidth.required &&\n        errors.push(\"Surface Width is required.\");\n      !this.$v.surfaceWidth.minValue &&\n        errors.push(\"Surface Width sould be more then 50mm.\");\n      !this.$v.surfaceWidth.maxValue &&\n        errors.push(\"Surface Width sould be less then 2000mm.\");\n      return errors;\n    },\n    surfaceHeightErrors() {\n      const errors = [];\n      if (!this.$v.surfaceHeight.$dirty) return errors;\n      !this.$v.surfaceHeight.required &&\n        errors.push(\"Surface Height is required.\");\n      !this.$v.surfaceHeight.minValue &&\n        errors.push(\"Surface Height sould be more then 50mm.\");\n      !this.$v.surfaceHeight.maxValue &&\n        errors.push(\"Surface Height sould be less then 2000mm.\");\n      return errors;\n    },\n    doDisableSurfaceDimensionsUpdateBtn() {\n      return this.$v.$invalid;\n    },\n    doDisableCloseSettingsDialogBtn() {\n      return this.doDisableSurfaceDimensionsUpdateBtn;\n    }\n  },\n  methods: {\n    ...mapMutations([\"TOGGLE_SURFACE_DIMENSIONS_ALERT_STATE\"]),\n    showSettingsDialog() {\n      //? before opening the dialoge, initialize the settings values from the local storage\n      this.surfaceWidth = window.localStorage.getItem(\"surfaceWidth\");\n      this.surfaceHeight = window.localStorage.getItem(\"surfaceHeight\");\n      this.settingsDialog = true;\n    },\n    updateSurfaceDimensions() {\n      this.$v.$touch();\n      if (!this.$v.$invalid) {\n        window.localStorage.setItem(\"surfaceWidth\", this.surfaceWidth);\n        window.localStorage.setItem(\"surfaceHeight\", this.surfaceHeight);\n        if (this.doShowSurfaceDimensionsAlert) {\n          this.TOGGLE_SURFACE_DIMENSIONS_ALERT_STATE();\n        }\n        this.$parent.showSuccessSnackbar(\"Information Updated Successfully\");\n      }\n    }\n  }\n};\n</script>\n\n<style>\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SettingsDialog.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SettingsDialog.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SettingsDialog.vue?vue&type=template&id=041b6dd0&\"\nimport script from \"./SettingsDialog.vue?vue&type=script&lang=js&\"\nexport * from \"./SettingsDialog.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}